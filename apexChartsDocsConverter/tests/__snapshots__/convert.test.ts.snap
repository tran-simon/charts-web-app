// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convert can convert: annotations 1`] = `
Object {
  "images": Object {
    "_isDocSection": true,
    "array": true,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "An absolute path to the image",
        "name": "path",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "path",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Left position for the image relative to the element specified in",
        "name": "x",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "x",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Top position for the image relative to the element specified in",
        "name": "y",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "y",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "The width of the image",
        "name": "width",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "width",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "The height of the image",
        "name": "height",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "height",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "A query selector to which the image element will be appended.",
        "name": "appendTo",
        "options": undefined,
        "path": Array [
          "annotations",
          "images",
          "appendTo",
        ],
        "type": "string",
      },
    ],
    "name": "images",
    "path": Array [
      "annotations",
      "images",
    ],
  },
  "points": Object {
    "_isDocSection": true,
    "array": true,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "X Value on which the annotation will be drawn (can be either timestamp for datetime x-axis or string category for category
 x-axis)",
        "name": "x",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "x",
        ],
        "type": "string | number",
      },
      Object {
        "_isDocValue": true,
        "description": "Y Value on which the annotation will be drawn",
        "name": "y",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "y",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "When there are multiple y-axis, setting this options will put the point annotation for that particular y-axis’ y value",
        "name": "yAxisIndex",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "yAxisIndex",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "In a multiple series, you will have to specify which series the annotation’s y value belongs to. Not required for single
 series",
        "name": "seriesIndex",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "seriesIndex",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Fires when user’s mouse enter the marker of point annotation.",
        "name": "mouseEnter",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "mouseEnter",
        ],
        "type": "function",
      },
      Object {
        "_isDocValue": true,
        "description": "Fires when user’s mouse leave the marker of point annotation.",
        "name": "mouseLeave",
        "options": undefined,
        "path": Array [
          "annotations",
          "points",
          "mouseLeave",
        ],
        "type": "function",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Size of the marker.",
            "name": "size",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "size",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Fill Color of the marker point.",
            "name": "fillColor",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "fillColor",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Stroke Color of the marker point.",
            "name": "strokeColor",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "strokeColor",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Stroke Size of the marker point.",
            "name": "strokeWidth",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "strokeWidth",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Shape of the marker.",
            "name": "shape",
            "options": Array [
              "circle",
              "square",
            ],
            "path": Array [
              "annotations",
              "points",
              "marker",
              "shape",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Radius of the marker (applies to square shape)",
            "name": "radius",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "radius",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the left offset of the marker",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the top offset of the marker",
            "name": "offsetY",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "offsetY",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Additional CSS classes to append to the marker",
            "name": "cssClass",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "marker",
              "cssClass",
            ],
            "type": "string",
          },
        ],
        "name": "marker",
        "path": Array [
          "annotations",
          "points",
          "marker",
        ],
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Border Color of the label",
            "name": "borderColor",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "borderColor",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Border width of the label",
            "name": "borderWidth",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "borderWidth",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Border-radius of the label",
            "name": "borderRadius",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "borderRadius",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Text for tha annotation label",
            "name": "text",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "text",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "The alignment of text relative to label’s drawing position",
            "name": "textAnchor",
            "options": Array [
              "start",
              "middle",
              "end",
            ],
            "path": Array [
              "annotations",
              "points",
              "label",
              "textAnchor",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the left offset for annotation label",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the top offset for annotation label",
            "name": "offsetY",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "offsetY",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse enter the label of the annotation.",
            "name": "mouseEnter",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "mouseEnter",
            ],
            "type": "function",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse leave the label of the annotation.",
            "name": "mouseLeave",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "label",
              "mouseLeave",
            ],
            "type": "function",
          },
          Object {
            "_isDocSection": true,
            "array": false,
            "children": Array [
              Object {
                "_isDocValue": true,
                "description": "Background Color for the annotation label",
                "name": "background",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "background",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "ForeColor for the annotation label",
                "name": "color",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "color",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "FontSize for the annotation label",
                "name": "fontSize",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "fontSize",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-weight for the annotation label",
                "name": "fontWeight",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "fontWeight",
                ],
                "type": "string | number",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-family for the annotation label",
                "name": "fontFamily",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "fontFamily",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "A custom Css Class to give to the annotation label elements",
                "name": "cssClass",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "cssClass",
                ],
                "type": "string",
              },
              Object {
                "_isDocSection": true,
                "array": false,
                "children": Array [
                  Object {
                    "_isDocValue": true,
                    "description": "Left padding for the label",
                    "name": "left",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "points",
                      "label",
                      "style",
                      "padding",
                      "left",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Right padding for the label",
                    "name": "right",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "points",
                      "label",
                      "style",
                      "padding",
                      "right",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Top padding for the label",
                    "name": "top",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "points",
                      "label",
                      "style",
                      "padding",
                      "top",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Bottom padding for the label",
                    "name": "bottom",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "points",
                      "label",
                      "style",
                      "padding",
                      "bottom",
                    ],
                    "type": "number",
                  },
                ],
                "name": "padding",
                "path": Array [
                  "annotations",
                  "points",
                  "label",
                  "style",
                  "padding",
                ],
              },
            ],
            "name": "style",
            "path": Array [
              "annotations",
              "points",
              "label",
              "style",
            ],
          },
        ],
        "name": "label",
        "path": Array [
          "annotations",
          "points",
          "label",
        ],
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Provide a full path of the image to display in place of annotation.",
            "name": "path",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "image",
              "path",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Width of image annotation.",
            "name": "width",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "image",
              "width",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Height of image annotation.",
            "name": "height",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "image",
              "height",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Left offset of the image.",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "image",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Top offset of the image.",
            "name": "offsetY",
            "options": undefined,
            "path": Array [
              "annotations",
              "points",
              "image",
              "offsetY",
            ],
            "type": "number",
          },
        ],
        "name": "image",
        "path": Array [
          "annotations",
          "points",
          "image",
        ],
      },
    ],
    "name": "points",
    "path": Array [
      "annotations",
      "points",
    ],
  },
  "position": Object {
    "_isDocValue": true,
    "description": "Whether to put the annotations behind the charts or in front of it.",
    "name": "position",
    "options": Array [
      "front",
      "back",
    ],
    "path": Array [
      "annotations",
      "position",
    ],
    "type": "string",
  },
  "texts": Object {
    "_isDocSection": true,
    "array": true,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "X (left) position for the text relative to the element specified in",
        "name": "x",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "x",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Y (top) position for the text relative to the element specified in",
        "name": "y",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "y",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "The main text to be displayed",
        "name": "text",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "text",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "The alignment of text relative to label’s drawing position",
        "name": "textAnchor",
        "options": Array [
          "start",
          "middle",
          "end",
        ],
        "path": Array [
          "annotations",
          "texts",
          "textAnchor",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "ForeColor for the annotation label",
        "name": "color",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "FontSize for the annotation label",
        "name": "fontSize",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "fontSize",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Font-weight for the annotation label",
        "name": "fontWeight",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "fontWeight",
        ],
        "type": "string | number",
      },
      Object {
        "_isDocValue": true,
        "description": "Font-family for the annotation label",
        "name": "fontFamily",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "fontFamily",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "A query selector to which the text element will be appended.",
        "name": "appendTo",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "appendTo",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Border Color for the label",
        "name": "borderColor",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "borderColor",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Border Radius for the label",
        "name": "borderRadius",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "borderRadius",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Border width for the label",
        "name": "borderWidth",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "borderWidth",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Left padding for the label",
        "name": "paddingLeft",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "paddingLeft",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Right padding for the label",
        "name": "paddingRight",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "paddingRight",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Top padding for the label",
        "name": "paddingTop",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "paddingTop",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Bottom padding for the label",
        "name": "paddingBottom",
        "options": undefined,
        "path": Array [
          "annotations",
          "texts",
          "paddingBottom",
        ],
        "type": "number",
      },
    ],
    "name": "texts",
    "path": Array [
      "annotations",
      "texts",
    ],
  },
  "xaxis": Object {
    "_isDocSection": true,
    "array": true,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Value on which the annotation will be drawn",
        "name": "x",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "x",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "If you provide this additional x2 value, a region will be drawn from x to x2.",
        "name": "x",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "x",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Creates dashes in borders of SVG path. A higher number creates more space between dashes in the border.",
        "name": "strokeDashArray",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "strokeDashArray",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the annotation line",
        "name": "borderColor",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "borderColor",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Fill Color of the region.",
        "name": "fillColor",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "fillColor",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Opacity of the filled region.",
        "name": "opacity",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "opacity",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for annotation line",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for annotation line",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "annotations",
          "xaxis",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Border color of the label",
            "name": "borderColor",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "borderColor",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Border width of the label",
            "name": "borderWidth",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "borderWidth",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Border-radius of the label",
            "name": "borderRadius",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "borderRadius",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Text for tha annotation label",
            "name": "text",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "text",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "The alignment of text relative to label’s drawing position",
            "name": "textAnchor",
            "options": Array [
              "start",
              "middle",
              "end",
            ],
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "textAnchor",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Available Options",
            "name": "position",
            "options": Array [
              "top",
              "bottom",
            ],
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "position",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Available Options",
            "name": "orientation",
            "options": Array [
              "vertical",
              "horizontal",
            ],
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "orientation",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the left offset for annotation label",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the left offset for annotation label",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the top offset for annotation label",
            "name": "offsetY",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "offsetY",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse enter the label of the annotation.",
            "name": "mouseEnter",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "mouseEnter",
            ],
            "type": "function",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse leave the label of the annotation.",
            "name": "mouseLeave",
            "options": undefined,
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "mouseLeave",
            ],
            "type": "function",
          },
          Object {
            "_isDocSection": true,
            "array": false,
            "children": Array [
              Object {
                "_isDocValue": true,
                "description": "ForeColor for the annotation label",
                "name": "color",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "xaxis",
                  "label",
                  "style",
                  "color",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "FontSize for the annotation label",
                "name": "fontSize",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "xaxis",
                  "label",
                  "style",
                  "fontSize",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-weight for the annotation label",
                "name": "fontWeight",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "xaxis",
                  "label",
                  "style",
                  "fontWeight",
                ],
                "type": "string | number",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-family for the annotation label",
                "name": "fontFamily",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "xaxis",
                  "label",
                  "style",
                  "fontFamily",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "A custom Css Class to give to the annotation label elements",
                "name": "cssClass",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "xaxis",
                  "label",
                  "style",
                  "cssClass",
                ],
                "type": "string",
              },
            ],
            "name": "style",
            "path": Array [
              "annotations",
              "xaxis",
              "label",
              "style",
            ],
          },
        ],
        "name": "label",
        "path": Array [
          "annotations",
          "xaxis",
          "label",
        ],
      },
    ],
    "name": "xaxis",
    "path": Array [
      "annotations",
      "xaxis",
    ],
  },
  "yaxis": Object {
    "_isDocSection": true,
    "array": true,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Value on which the annotation will be drawn",
        "name": "y",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "y",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "If you provide this additional y2 value, a region will be drawn from y to y2.",
        "name": "y",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "y",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Creates dashes in borders of the SVG path. A higher number creates more space between dashes in the border.",
        "name": "strokeDashArray",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "strokeDashArray",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the annotation line",
        "name": "borderColor",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "borderColor",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Fill Color of the region.",
        "name": "fillColor",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "fillColor",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Opacity of the filled region.",
        "name": "opacity",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "opacity",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for annotation line",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for annotation line",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the width for annotation line",
        "name": "width",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "width",
        ],
        "type": "string | number",
      },
      Object {
        "_isDocValue": true,
        "description": "When there are multiple y-axis, setting this options will put the annotation for that particular y-axis",
        "name": "yAxisIndex",
        "options": undefined,
        "path": Array [
          "annotations",
          "yaxis",
          "yAxisIndex",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Border Color of the label",
            "name": "borderColor",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "borderColor",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Border width of the label",
            "name": "borderWidth",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "borderWidth",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Border-radius of the label",
            "name": "borderRadius",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "borderRadius",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Text for tha annotation label",
            "name": "text",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "text",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "The alignment of text relative to label’s drawing position",
            "name": "textAnchor",
            "options": Array [
              "start",
              "middle",
              "end",
            ],
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "textAnchor",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Available Options",
            "name": "position",
            "options": Array [
              "left",
              "right",
            ],
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "position",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the left offset for annotation label",
            "name": "offsetX",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "offsetX",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Sets the top offset for annotation label",
            "name": "offsetY",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "offsetY",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse enter the label of the annotation.",
            "name": "mouseEnter",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "mouseEnter",
            ],
            "type": "function",
          },
          Object {
            "_isDocValue": true,
            "description": "Fires when user’s mouse leave the label of the annotation.",
            "name": "mouseLeave",
            "options": undefined,
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "mouseLeave",
            ],
            "type": "function",
          },
          Object {
            "_isDocSection": true,
            "array": false,
            "children": Array [
              Object {
                "_isDocValue": true,
                "description": "Background Color for the annotation label",
                "name": "background",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "background",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "ForeColor for the annotation label",
                "name": "color",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "color",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "FontSize for the annotation label",
                "name": "fontSize",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "fontSize",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-weight for the annotation label",
                "name": "fontWeight",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "fontWeight",
                ],
                "type": "string | number",
              },
              Object {
                "_isDocValue": true,
                "description": "Font-family for the annotation label",
                "name": "fontFamily",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "fontFamily",
                ],
                "type": "string",
              },
              Object {
                "_isDocValue": true,
                "description": "A custom Css Class to give to the annotation label elements",
                "name": "cssClass",
                "options": undefined,
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "cssClass",
                ],
                "type": "string",
              },
              Object {
                "_isDocSection": true,
                "array": false,
                "children": Array [
                  Object {
                    "_isDocValue": true,
                    "description": "Left padding for the label",
                    "name": "left",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "yaxis",
                      "label",
                      "style",
                      "padding",
                      "left",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Right padding for the label",
                    "name": "right",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "yaxis",
                      "label",
                      "style",
                      "padding",
                      "right",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Top padding for the label",
                    "name": "top",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "yaxis",
                      "label",
                      "style",
                      "padding",
                      "top",
                    ],
                    "type": "number",
                  },
                  Object {
                    "_isDocValue": true,
                    "description": "Bottom padding for the label",
                    "name": "bottom",
                    "options": undefined,
                    "path": Array [
                      "annotations",
                      "yaxis",
                      "label",
                      "style",
                      "padding",
                      "bottom",
                    ],
                    "type": "number",
                  },
                ],
                "name": "padding",
                "path": Array [
                  "annotations",
                  "yaxis",
                  "label",
                  "style",
                  "padding",
                ],
              },
            ],
            "name": "style",
            "path": Array [
              "annotations",
              "yaxis",
              "label",
              "style",
            ],
          },
        ],
        "name": "label",
        "path": Array [
          "annotations",
          "yaxis",
          "label",
        ],
      },
    ],
    "name": "yaxis",
    "path": Array [
      "annotations",
      "yaxis",
    ],
  },
}
`;

exports[`convert can convert: annotations intl 1`] = `
Object {
  "annotations": "Annotations",
  "annotations.images": "Images",
  "annotations.images.appendTo": "Append To",
  "annotations.images.height": "Height",
  "annotations.images.path": "Path",
  "annotations.images.width": "Width",
  "annotations.images.x": "X",
  "annotations.images.y": "Y",
  "annotations.points": "Points",
  "annotations.points.image": "Image",
  "annotations.points.image.height": "Height",
  "annotations.points.image.offsetX": "Offset X",
  "annotations.points.image.offsetY": "Offset Y",
  "annotations.points.image.path": "Path",
  "annotations.points.image.width": "Width",
  "annotations.points.label": "Label",
  "annotations.points.label.borderColor": "Border Color",
  "annotations.points.label.borderRadius": "Border Radius",
  "annotations.points.label.borderWidth": "Border Width",
  "annotations.points.label.mouseEnter": "Mouse Enter",
  "annotations.points.label.mouseLeave": "Mouse Leave",
  "annotations.points.label.offsetX": "Offset X",
  "annotations.points.label.offsetY": "Offset Y",
  "annotations.points.label.style": "Style",
  "annotations.points.label.style.background": "Background",
  "annotations.points.label.style.color": "Color",
  "annotations.points.label.style.cssClass": "Css Class",
  "annotations.points.label.style.fontFamily": "Font Family",
  "annotations.points.label.style.fontSize": "Font Size",
  "annotations.points.label.style.fontWeight": "Font Weight",
  "annotations.points.label.style.padding": "Padding",
  "annotations.points.label.style.padding.bottom": "Bottom",
  "annotations.points.label.style.padding.left": "Left",
  "annotations.points.label.style.padding.right": "Right",
  "annotations.points.label.style.padding.top": "Top",
  "annotations.points.label.text": "Text",
  "annotations.points.label.textAnchor": "Text Anchor",
  "annotations.points.marker": "Marker",
  "annotations.points.marker.cssClass": "Css Class",
  "annotations.points.marker.fillColor": "Fill Color",
  "annotations.points.marker.offsetX": "Offset X",
  "annotations.points.marker.offsetY": "Offset Y",
  "annotations.points.marker.radius": "Radius",
  "annotations.points.marker.shape": "Shape",
  "annotations.points.marker.size": "Size",
  "annotations.points.marker.strokeColor": "Stroke Color",
  "annotations.points.marker.strokeWidth": "Stroke Width",
  "annotations.points.mouseEnter": "Mouse Enter",
  "annotations.points.mouseLeave": "Mouse Leave",
  "annotations.points.seriesIndex": "Series Index",
  "annotations.points.x": "X",
  "annotations.points.y": "Y",
  "annotations.points.yAxisIndex": "Y Axis Index",
  "annotations.position": "Position",
  "annotations.texts": "Texts",
  "annotations.texts.appendTo": "Append To",
  "annotations.texts.borderColor": "Border Color",
  "annotations.texts.borderRadius": "Border Radius",
  "annotations.texts.borderWidth": "Border Width",
  "annotations.texts.color": "Color",
  "annotations.texts.fontFamily": "Font Family",
  "annotations.texts.fontSize": "Font Size",
  "annotations.texts.fontWeight": "Font Weight",
  "annotations.texts.paddingBottom": "Padding Bottom",
  "annotations.texts.paddingLeft": "Padding Left",
  "annotations.texts.paddingRight": "Padding Right",
  "annotations.texts.paddingTop": "Padding Top",
  "annotations.texts.text": "Text",
  "annotations.texts.textAnchor": "Text Anchor",
  "annotations.texts.x": "X",
  "annotations.texts.y": "Y",
  "annotations.xaxis": "Xaxis",
  "annotations.xaxis.borderColor": "Border Color",
  "annotations.xaxis.fillColor": "Fill Color",
  "annotations.xaxis.label": "Label",
  "annotations.xaxis.label.borderColor": "Border Color",
  "annotations.xaxis.label.borderRadius": "Border Radius",
  "annotations.xaxis.label.borderWidth": "Border Width",
  "annotations.xaxis.label.mouseEnter": "Mouse Enter",
  "annotations.xaxis.label.mouseLeave": "Mouse Leave",
  "annotations.xaxis.label.offsetX": "Offset X",
  "annotations.xaxis.label.offsetY": "Offset Y",
  "annotations.xaxis.label.orientation": "Orientation",
  "annotations.xaxis.label.position": "Position",
  "annotations.xaxis.label.style": "Style",
  "annotations.xaxis.label.style.color": "Color",
  "annotations.xaxis.label.style.cssClass": "Css Class",
  "annotations.xaxis.label.style.fontFamily": "Font Family",
  "annotations.xaxis.label.style.fontSize": "Font Size",
  "annotations.xaxis.label.style.fontWeight": "Font Weight",
  "annotations.xaxis.label.text": "Text",
  "annotations.xaxis.label.textAnchor": "Text Anchor",
  "annotations.xaxis.offsetX": "Offset X",
  "annotations.xaxis.offsetY": "Offset Y",
  "annotations.xaxis.opacity": "Opacity",
  "annotations.xaxis.strokeDashArray": "Stroke Dash Array",
  "annotations.xaxis.x": "X",
  "annotations.yaxis": "Yaxis",
  "annotations.yaxis.borderColor": "Border Color",
  "annotations.yaxis.fillColor": "Fill Color",
  "annotations.yaxis.label": "Label",
  "annotations.yaxis.label.borderColor": "Border Color",
  "annotations.yaxis.label.borderRadius": "Border Radius",
  "annotations.yaxis.label.borderWidth": "Border Width",
  "annotations.yaxis.label.mouseEnter": "Mouse Enter",
  "annotations.yaxis.label.mouseLeave": "Mouse Leave",
  "annotations.yaxis.label.offsetX": "Offset X",
  "annotations.yaxis.label.offsetY": "Offset Y",
  "annotations.yaxis.label.position": "Position",
  "annotations.yaxis.label.style": "Style",
  "annotations.yaxis.label.style.background": "Background",
  "annotations.yaxis.label.style.color": "Color",
  "annotations.yaxis.label.style.cssClass": "Css Class",
  "annotations.yaxis.label.style.fontFamily": "Font Family",
  "annotations.yaxis.label.style.fontSize": "Font Size",
  "annotations.yaxis.label.style.fontWeight": "Font Weight",
  "annotations.yaxis.label.style.padding": "Padding",
  "annotations.yaxis.label.style.padding.bottom": "Bottom",
  "annotations.yaxis.label.style.padding.left": "Left",
  "annotations.yaxis.label.style.padding.right": "Right",
  "annotations.yaxis.label.style.padding.top": "Top",
  "annotations.yaxis.label.text": "Text",
  "annotations.yaxis.label.textAnchor": "Text Anchor",
  "annotations.yaxis.offsetX": "Offset X",
  "annotations.yaxis.offsetY": "Offset Y",
  "annotations.yaxis.opacity": "Opacity",
  "annotations.yaxis.strokeDashArray": "Stroke Dash Array",
  "annotations.yaxis.width": "Width",
  "annotations.yaxis.y": "Y",
  "annotations.yaxis.yAxisIndex": "Y Axis Index",
}
`;

exports[`convert can convert: fill 1`] = `
Object {
  "colors": Object {
    "_isDocValue": true,
    "description": "Colors to fill the svg paths. Each index in the array corresponds to the series-index. Example",
    "name": "colors",
    "options": undefined,
    "path": Array [
      "fill",
      "colors",
    ],
    "type": "any",
  },
  "gradient": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Available options for gradient shade",
        "name": "shade",
        "options": Array [
          "light",
          "dark",
        ],
        "path": Array [
          "fill",
          "gradient",
          "shade",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Available options for gradient type",
        "name": "type",
        "options": Array [
          "horizontal",
          "vertical",
          "diagonal1",
          "diagonal2",
        ],
        "path": Array [
          "fill",
          "gradient",
          "type",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Intensity of the gradient shade.",
        "name": "shadeIntensity",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "shadeIntensity",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Optional colors that ends the gradient to.",
        "name": "gradientToColors",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "gradientToColors",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Inverse the start and end colors of the gradient.",
        "name": "inverseColors",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "inverseColors",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Start color's opacity. If you want different opacity for different series, you can pass an array of numbers. For eg.,",
        "name": "opacityFrom",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "opacityFrom",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "End color's opacity",
        "name": "opacityTo",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "opacityTo",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Stops defines the ramp of colors to use on a gradient",
        "name": "stops",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "stops",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Override everything and define your own stops with unlimited color stops.",
        "name": "colorStops",
        "options": undefined,
        "path": Array [
          "fill",
          "gradient",
          "colorStops",
        ],
        "type": "any",
      },
    ],
    "name": "gradient",
    "path": Array [
      "fill",
      "gradient",
    ],
  },
  "image": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "src accepts an array of image paths which will correspond to each series.",
        "name": "src",
        "options": undefined,
        "path": Array [
          "fill",
          "image",
          "src",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Width of each image for all the series",
        "name": "width",
        "options": undefined,
        "path": Array [
          "fill",
          "image",
          "width",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Height of each image for all the series",
        "name": "height",
        "options": undefined,
        "path": Array [
          "fill",
          "image",
          "height",
        ],
        "type": "number",
      },
    ],
    "name": "image",
    "path": Array [
      "fill",
      "image",
    ],
  },
  "opacity": Object {
    "_isDocValue": true,
    "description": "Opacity of the fill attribute.",
    "name": "opacity",
    "options": undefined,
    "path": Array [
      "fill",
      "opacity",
    ],
    "type": "number",
  },
  "pattern": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Available pattern styles",
        "name": "style",
        "options": Array [
          "verticalLines",
          "horizontalLines",
          "slantedLines",
          "squares",
          "circles",
        ],
        "path": Array [
          "fill",
          "pattern",
          "style",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Pattern width which will be repeated at this interval",
        "name": "width",
        "options": undefined,
        "path": Array [
          "fill",
          "pattern",
          "width",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Pattern height which will be repeated at this interval",
        "name": "height",
        "options": undefined,
        "path": Array [
          "fill",
          "pattern",
          "height",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Pattern lines width indicates the thickness of the stroke of pattern.",
        "name": "strokeWidth",
        "options": undefined,
        "path": Array [
          "fill",
          "pattern",
          "strokeWidth",
        ],
        "type": "number",
      },
    ],
    "name": "pattern",
    "path": Array [
      "fill",
      "pattern",
    ],
  },
  "type": Object {
    "_isDocValue": true,
    "description": "Whether to fill the paths with solid colors or gradient.",
    "name": "type",
    "options": Array [
      "solid",
      "gradient",
      "pattern",
      "image",
    ],
    "path": Array [
      "fill",
      "type",
    ],
    "type": "any",
  },
}
`;

exports[`convert can convert: fill intl 1`] = `
Object {
  "fill": "Fill",
  "fill.colors": "Colors",
  "fill.gradient": "Gradient",
  "fill.gradient.colorStops": "Color Stops",
  "fill.gradient.gradientToColors": "Gradient To Colors",
  "fill.gradient.inverseColors": "Inverse Colors",
  "fill.gradient.opacityFrom": "Opacity From",
  "fill.gradient.opacityTo": "Opacity To",
  "fill.gradient.shade": "Shade",
  "fill.gradient.shadeIntensity": "Shade Intensity",
  "fill.gradient.stops": "Stops",
  "fill.gradient.type": "Type",
  "fill.image": "Image",
  "fill.image.height": "Height",
  "fill.image.src": "Src",
  "fill.image.width": "Width",
  "fill.opacity": "Opacity",
  "fill.pattern": "Pattern",
  "fill.pattern.height": "Height",
  "fill.pattern.strokeWidth": "Stroke Width",
  "fill.pattern.style": "Style",
  "fill.pattern.width": "Width",
  "fill.type": "Type",
}
`;

exports[`convert can convert: markers 1`] = `
Object {
  "colors": Object {
    "_isDocValue": true,
    "description": "Sets the fill color(s) of the marker point.",
    "name": "colors",
    "options": undefined,
    "path": Array [
      "markers",
      "colors",
    ],
    "type": "any",
  },
  "discrete": Object {
    "_isDocValue": true,
    "description": "Allows you to target individual data-points and style particular marker differently",
    "name": "discrete",
    "options": undefined,
    "path": Array [
      "markers",
      "discrete",
    ],
    "type": "any",
  },
  "fillOpacity": Object {
    "_isDocValue": true,
    "description": "Opacity of the marker fill color.",
    "name": "fillOpacity",
    "options": undefined,
    "path": Array [
      "markers",
      "fillOpacity",
    ],
    "type": "any",
  },
  "hover": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Fixed size of the marker when it is active",
        "name": "size",
        "options": undefined,
        "path": Array [
          "markers",
          "hover",
          "size",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Unlike the fixed size, this option takes the original markers.size and increases/decreases the value based on it.",
        "name": "sizeOffset",
        "options": undefined,
        "path": Array [
          "markers",
          "hover",
          "sizeOffset",
        ],
        "type": "number",
      },
    ],
    "name": "hover",
    "path": Array [
      "markers",
      "hover",
    ],
  },
  "offsetX": Object {
    "_isDocValue": true,
    "description": "Sets the left offset of the marker",
    "name": "offsetX",
    "options": undefined,
    "path": Array [
      "markers",
      "offsetX",
    ],
    "type": "number",
  },
  "offsetY": Object {
    "_isDocValue": true,
    "description": "Sets the top offset of the marker",
    "name": "offsetY",
    "options": undefined,
    "path": Array [
      "markers",
      "offsetY",
    ],
    "type": "number",
  },
  "onClick": Object {
    "_isDocValue": true,
    "description": "When a marker is clicked, markers.onClick is called.",
    "name": "onClick",
    "options": undefined,
    "path": Array [
      "markers",
      "onClick",
    ],
    "type": "function",
  },
  "onDblClick": Object {
    "_isDocValue": true,
    "description": "When a marker is double clicked, markers.onDblClick is called.",
    "name": "onDblClick",
    "options": undefined,
    "path": Array [
      "markers",
      "onDblClick",
    ],
    "type": "function",
  },
  "radius": Object {
    "_isDocValue": true,
    "description": "Radius of the marker (applies to square shape)",
    "name": "radius",
    "options": undefined,
    "path": Array [
      "markers",
      "radius",
    ],
    "type": "number",
  },
  "shape": Object {
    "_isDocValue": true,
    "description": "Shape of the marker.",
    "name": "shape",
    "options": Array [
      "circle",
      "square",
    ],
    "path": Array [
      "markers",
      "shape",
    ],
    "type": "string",
  },
  "showNullDataPoints": Object {
    "_isDocValue": true,
    "description": "Whether to show markers for null values in a line/area chart. If disabled, any null values present in line/area charts will not be visible.",
    "name": "showNullDataPoints",
    "options": undefined,
    "path": Array [
      "markers",
      "showNullDataPoints",
    ],
    "type": "boolean",
  },
  "size": Object {
    "_isDocValue": true,
    "description": "Size of the marker point.",
    "name": "size",
    "options": undefined,
    "path": Array [
      "markers",
      "size",
    ],
    "type": "number",
  },
  "strokeColors": Object {
    "_isDocValue": true,
    "description": "Stroke Color of the marker. Accepts a single color or an array of colors in a multi-series chart.",
    "name": "strokeColors",
    "options": undefined,
    "path": Array [
      "markers",
      "strokeColors",
    ],
    "type": "any",
  },
  "strokeDashArray": Object {
    "_isDocValue": true,
    "description": "Dashes in the border around marker. Higher number creates more space between dashes in the border.",
    "name": "strokeDashArray",
    "options": undefined,
    "path": Array [
      "markers",
      "strokeDashArray",
    ],
    "type": "any",
  },
  "strokeOpacity": Object {
    "_isDocValue": true,
    "description": "Opacity of the border around marker.",
    "name": "strokeOpacity",
    "options": undefined,
    "path": Array [
      "markers",
      "strokeOpacity",
    ],
    "type": "any",
  },
  "strokeWidth": Object {
    "_isDocValue": true,
    "description": "Stroke Size of the marker.",
    "name": "strokeWidth",
    "options": undefined,
    "path": Array [
      "markers",
      "strokeWidth",
    ],
    "type": "any",
  },
}
`;

exports[`convert can convert: markers intl 1`] = `
Object {
  "markers": "Markers",
  "markers.colors": "Colors",
  "markers.discrete": "Discrete",
  "markers.fillOpacity": "Fill Opacity",
  "markers.hover": "Hover",
  "markers.hover.size": "Size",
  "markers.hover.sizeOffset": "Size Offset",
  "markers.offsetX": "Offset X",
  "markers.offsetY": "Offset Y",
  "markers.onClick": "On Click",
  "markers.onDblClick": "On Dbl Click",
  "markers.radius": "Radius",
  "markers.shape": "Shape",
  "markers.showNullDataPoints": "Show Null Data Points",
  "markers.size": "Size",
  "markers.strokeColors": "Stroke Colors",
  "markers.strokeDashArray": "Stroke Dash Array",
  "markers.strokeOpacity": "Stroke Opacity",
  "markers.strokeWidth": "Stroke Width",
}
`;

exports[`convert can convert: noData 1`] = `
Object {
  "align": Object {
    "_isDocValue": true,
    "description": "Available Options",
    "name": "align",
    "options": Array [
      "left",
      "center",
      "right",
    ],
    "path": Array [
      "noData",
      "align",
    ],
    "type": "string",
  },
  "offsetX": Object {
    "_isDocValue": true,
    "description": "text offset from left",
    "name": "offsetX",
    "options": undefined,
    "path": Array [
      "noData",
      "offsetX",
    ],
    "type": "number",
  },
  "offsetY": Object {
    "_isDocValue": true,
    "description": "text offset from left",
    "name": "offsetY",
    "options": undefined,
    "path": Array [
      "noData",
      "offsetY",
    ],
    "type": "number",
  },
  "style": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "ForeColor of the text",
        "name": "color",
        "options": undefined,
        "path": Array [
          "noData",
          "style",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "FontSize of the text",
        "name": "fontSize",
        "options": undefined,
        "path": Array [
          "noData",
          "style",
          "fontSize",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "FontFamily of the text",
        "name": "fontFamily",
        "options": undefined,
        "path": Array [
          "noData",
          "style",
          "fontFamily",
        ],
        "type": "string",
      },
    ],
    "name": "style",
    "path": Array [
      "noData",
      "style",
    ],
  },
  "text": Object {
    "_isDocValue": true,
    "description": "The text to display when no-data is available. Defaults to undefined which displays nothing.",
    "name": "text",
    "options": undefined,
    "path": Array [
      "noData",
      "text",
    ],
    "type": "string",
  },
  "verticalAlign": Object {
    "_isDocValue": true,
    "description": "Available Options",
    "name": "verticalAlign",
    "options": Array [
      "top",
      "middle",
      "bottom",
    ],
    "path": Array [
      "noData",
      "verticalAlign",
    ],
    "type": "string",
  },
}
`;

exports[`convert can convert: noData intl 1`] = `
Object {
  "noData": "No Data",
  "noData.align": "Align",
  "noData.offsetX": "Offset X",
  "noData.offsetY": "Offset Y",
  "noData.style": "Style",
  "noData.style.color": "Color",
  "noData.style.fontFamily": "Font Family",
  "noData.style.fontSize": "Font Size",
  "noData.text": "Text",
  "noData.verticalAlign": "Vertical Align",
}
`;

exports[`convert can convert: stroke 1`] = `
Object {
  "colors": Object {
    "_isDocValue": true,
    "description": "Colors to fill the border for paths.",
    "name": "colors",
    "options": undefined,
    "path": Array [
      "stroke",
      "colors",
    ],
    "type": "any",
  },
  "curve": Object {
    "_isDocValue": true,
    "description": "In line / area charts, whether to draw smooth lines or straight lines",
    "name": "curve",
    "options": Array [
      "smooth",
      "straight",
      "stepline",
    ],
    "path": Array [
      "stroke",
      "curve",
    ],
    "type": "any",
  },
  "dashArray": Object {
    "_isDocValue": true,
    "description": "Creates dashes in borders of svg path. Higher number creates more space between dashes in the border.",
    "name": "dashArray",
    "options": undefined,
    "path": Array [
      "stroke",
      "dashArray",
    ],
    "type": "any",
  },
  "lineCap": Object {
    "_isDocValue": true,
    "description": "For setting the starting and ending points of stroke",
    "name": "lineCap",
    "options": Array [
      "butt",
      "square",
      "round",
    ],
    "path": Array [
      "stroke",
      "lineCap",
    ],
    "type": "string",
  },
  "show": Object {
    "_isDocValue": true,
    "description": "To show or hide path-stroke / line",
    "name": "show",
    "options": undefined,
    "path": Array [
      "stroke",
      "show",
    ],
    "type": "boolean",
  },
  "width": Object {
    "_isDocValue": true,
    "description": "Sets the width of border for svg path",
    "name": "width",
    "options": undefined,
    "path": Array [
      "stroke",
      "width",
    ],
    "type": "any",
  },
}
`;

exports[`convert can convert: stroke intl 1`] = `
Object {
  "stroke": "Stroke",
  "stroke.colors": "Colors",
  "stroke.curve": "Curve",
  "stroke.dashArray": "Dash Array",
  "stroke.lineCap": "Line Cap",
  "stroke.show": "Show",
  "stroke.width": "Width",
}
`;

exports[`convert can convert: title 1`] = `
Object {
  "align": Object {
    "_isDocValue": true,
    "description": "Alignment of title relative to chart area.",
    "name": "align",
    "options": Array [
      "left",
      "center",
      "right",
    ],
    "path": Array [
      "title",
      "align",
    ],
    "type": "string",
  },
  "floating": Object {
    "_isDocValue": true,
    "description": "The floating option will take out the title text from the chart area and make it float on top of the chart.",
    "name": "floating",
    "options": undefined,
    "path": Array [
      "title",
      "floating",
    ],
    "type": "boolean",
  },
  "margin": Object {
    "_isDocValue": true,
    "description": "Vertical spacing around the title text",
    "name": "margin",
    "options": undefined,
    "path": Array [
      "title",
      "margin",
    ],
    "type": "number",
  },
  "offsetX": Object {
    "_isDocValue": true,
    "description": "Sets the left offset for title text",
    "name": "offsetX",
    "options": undefined,
    "path": Array [
      "title",
      "offsetX",
    ],
    "type": "number",
  },
  "offsetY": Object {
    "_isDocValue": true,
    "description": "Sets the top offset for title text",
    "name": "offsetY",
    "options": undefined,
    "path": Array [
      "title",
      "offsetY",
    ],
    "type": "number",
  },
  "style": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Font Size of the title text",
        "name": "fontSize",
        "options": undefined,
        "path": Array [
          "title",
          "style",
          "fontSize",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Font Weight of the title text",
        "name": "fontWeight",
        "options": undefined,
        "path": Array [
          "title",
          "style",
          "fontWeight",
        ],
        "type": "string | number",
      },
      Object {
        "_isDocValue": true,
        "description": "Font Family of the title text",
        "name": "fontFamily",
        "options": undefined,
        "path": Array [
          "title",
          "style",
          "fontFamily",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Fore color of the title text",
        "name": "color",
        "options": undefined,
        "path": Array [
          "title",
          "style",
          "color",
        ],
        "type": "any",
      },
    ],
    "name": "style",
    "path": Array [
      "title",
      "style",
    ],
  },
  "text": Object {
    "_isDocValue": true,
    "description": "Text to display as a title of chart",
    "name": "text",
    "options": undefined,
    "path": Array [
      "title",
      "text",
    ],
    "type": "string",
  },
}
`;

exports[`convert can convert: title intl 1`] = `
Object {
  "title": "Title",
  "title.align": "Align",
  "title.floating": "Floating",
  "title.margin": "Margin",
  "title.offsetX": "Offset X",
  "title.offsetY": "Offset Y",
  "title.style": "Style",
  "title.style.color": "Color",
  "title.style.fontFamily": "Font Family",
  "title.style.fontSize": "Font Size",
  "title.style.fontWeight": "Font Weight",
  "title.text": "Text",
}
`;

exports[`convert can convert: xaxis 1`] = `
Object {
  "axisBorder": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Draw a horizontal border on the x-axis",
        "name": "show",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisBorder",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the horizontal axis border",
        "name": "color",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisBorder",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset of the axis border",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisBorder",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset of the axis border",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisBorder",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "The stroke width",
        "name": "strokeWidth",
        "path": Array [
          "xaxis",
          "axisBorder",
          "strokeWidth",
        ],
        "type": "number",
      },
    ],
    "name": "axisBorder",
    "path": Array [
      "xaxis",
      "axisBorder",
    ],
  },
  "axisTicks": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Draw ticks on the x-axis to specify intervals",
        "name": "show",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisTicks",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Available Options",
        "name": "borderType",
        "options": Array [
          "solid",
          "dotted",
        ],
        "path": Array [
          "xaxis",
          "axisTicks",
          "borderType",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the ticks",
        "name": "color",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisTicks",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Height of the ticks",
        "name": "height",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisTicks",
          "height",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset of the ticks",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisTicks",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset of the ticks",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "xaxis",
          "axisTicks",
          "offsetY",
        ],
        "type": "number",
      },
    ],
    "name": "axisTicks",
    "path": Array [
      "xaxis",
      "axisTicks",
    ],
  },
  "categories": Object {
    "_isDocValue": true,
    "description": "Categories are labels which are displayed on the x-axis.",
    "name": "categories",
    "options": undefined,
    "path": Array [
      "xaxis",
      "categories",
    ],
    "type": "any",
  },
  "crosshairs": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show crosshairs on x-axis when user moves the mouse over chart area",
        "name": "show",
        "options": undefined,
        "path": Array [
          "xaxis",
          "crosshairs",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Possible Options",
        "name": "width",
        "options": undefined,
        "path": Array [
          "xaxis",
          "crosshairs",
          "width",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Possible Options",
        "name": "position",
        "options": Array [
          "back",
          "front",
        ],
        "path": Array [
          "xaxis",
          "crosshairs",
          "position",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Opacity of the crosshairs",
        "name": "opacity",
        "options": undefined,
        "path": Array [
          "xaxis",
          "crosshairs",
          "opacity",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Border Color of crosshairs",
            "name": "color",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "stroke",
              "color",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Border Width of crosshairs",
            "name": "width",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "stroke",
              "width",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Creates dashes in borders of crosshairs. A higher number creates more space between dashes in the border.",
            "name": "dashArray",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "stroke",
              "dashArray",
            ],
            "type": "number",
          },
        ],
        "name": "stroke",
        "path": Array [
          "xaxis",
          "crosshairs",
          "stroke",
        ],
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Possible Options",
            "name": "type",
            "options": Array [
              "solid",
              "gradient",
            ],
            "path": Array [
              "xaxis",
              "crosshairs",
              "fill",
              "type",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Fill color of crosshairs",
            "name": "color",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "fill",
              "color",
            ],
            "type": "string",
          },
          Object {
            "_isDocSection": true,
            "array": false,
            "children": Array [
              Object {
                "_isDocValue": true,
                "description": "Crosshairs Gradient Color from",
                "name": "colorFrom",
                "options": undefined,
                "path": Array [
                  "xaxis",
                  "crosshairs",
                  "fill",
                  "gradient",
                  "colorFrom",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "Crosshairs Gradient Color to",
                "name": "colorTo",
                "options": undefined,
                "path": Array [
                  "xaxis",
                  "crosshairs",
                  "fill",
                  "gradient",
                  "colorTo",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "Stops defines the ramp of colors to use on a gradient",
                "name": "stops",
                "options": undefined,
                "path": Array [
                  "xaxis",
                  "crosshairs",
                  "fill",
                  "gradient",
                  "stops",
                ],
                "type": "any",
              },
              Object {
                "_isDocValue": true,
                "description": "Crosshairs fill opacity from",
                "name": "opacityFrom",
                "options": undefined,
                "path": Array [
                  "xaxis",
                  "crosshairs",
                  "fill",
                  "gradient",
                  "opacityFrom",
                ],
                "type": "number",
              },
              Object {
                "_isDocValue": true,
                "description": "Crosshairs fill opacity to",
                "name": "opacityTo",
                "options": undefined,
                "path": Array [
                  "xaxis",
                  "crosshairs",
                  "fill",
                  "gradient",
                  "opacityTo",
                ],
                "type": "number",
              },
            ],
            "name": "gradient",
            "path": Array [
              "xaxis",
              "crosshairs",
              "fill",
              "gradient",
            ],
          },
        ],
        "name": "fill",
        "path": Array [
          "xaxis",
          "crosshairs",
          "fill",
        ],
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Enable a dropshadow for crosshairs",
            "name": "enabled",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "dropShadow",
              "enabled",
            ],
            "type": "boolean",
          },
          Object {
            "_isDocValue": true,
            "description": "Set top offset for shadow",
            "name": "top",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "dropShadow",
              "top",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Set left offset for shadow",
            "name": "left",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "dropShadow",
              "left",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Set blur distance for shadow",
            "name": "blur",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "dropShadow",
              "blur",
            ],
            "type": "number",
          },
          Object {
            "_isDocValue": true,
            "description": "Set the opacity of shadow.",
            "name": "opacity",
            "options": undefined,
            "path": Array [
              "xaxis",
              "crosshairs",
              "dropShadow",
              "opacity",
            ],
            "type": "number",
          },
        ],
        "name": "dropShadow",
        "path": Array [
          "xaxis",
          "crosshairs",
          "dropShadow",
        ],
      },
    ],
    "name": "crosshairs",
    "path": Array [
      "xaxis",
      "crosshairs",
    ],
  },
  "decimalsInFloat": Object {
    "_isDocValue": true,
    "description": "The number of fractions to display when there are floating values on the x-axis numbers.",
    "name": "decimalsInFloat",
    "options": undefined,
    "path": Array [
      "xaxis",
      "decimalsInFloat",
    ],
    "type": "number",
  },
  "floating": Object {
    "_isDocValue": true,
    "description": "Setting this options takes the y-axis out of the plotting area. Much behaves like",
    "name": "floating",
    "options": undefined,
    "path": Array [
      "xaxis",
      "floating",
    ],
    "type": "boolean",
  },
  "labels": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show labels on x-axis",
        "name": "show",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Rotate angle for the x-axis labels",
        "name": "rotate",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "rotate",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Whether to rotate the labels always or to rotate only when the texts don’t fit the available width",
        "name": "rotateAlways",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "rotateAlways",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "When labels are too close and start to overlap on one another, this option prevents overlapping of the labels.",
        "name": "hideOverlappingLabels",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "hideOverlappingLabels",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "By default, duplicate labels are not printed to prevent congested values in a datetime series. If you intentionally want to display the same values in x-axis labels, turn on this option",
        "name": "showDuplicates",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "showDuplicates",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Append",
        "name": "trim",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "trim",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Minimum height for the labels",
        "name": "minHeight",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "minHeight",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Maximum height for the labels when they are rotated.",
        "name": "maxHeight",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "maxHeight",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "ForeColor for the x-axis label. Accepts an array for",
            "name": "colors",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "style",
              "colors",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "FontSize for the x-axis label",
            "name": "fontSize",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "style",
              "fontSize",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "FontFamily for the x-axis label",
            "name": "fontFamily",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "style",
              "fontFamily",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Font-weight for the x-axis label",
            "name": "fontWeight",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "style",
              "fontWeight",
            ],
            "type": "string | number",
          },
          Object {
            "_isDocValue": true,
            "description": "A custom Css Class to give to the label elements",
            "name": "cssClass",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "style",
              "cssClass",
            ],
            "type": "string",
          },
        ],
        "name": "style",
        "path": Array [
          "xaxis",
          "labels",
          "style",
        ],
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for label",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for label",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Formats the datetime value based on the format specifier.",
        "name": "format",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "format",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "When turned on, local DateTime is converted into UTC. Turn it off if you supply date with timezone info and want to preserve it.",
        "name": "datetimeUTC",
        "options": undefined,
        "path": Array [
          "xaxis",
          "labels",
          "datetimeUTC",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Format specifier for the year.",
            "name": "year",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "datetimeFormatter",
              "year",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Format specifier for the month.",
            "name": "month",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "datetimeFormatter",
              "month",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Format specifier for the day of month.",
            "name": "day",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "datetimeFormatter",
              "day",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Format specifier for the hour of day.",
            "name": "hour",
            "options": undefined,
            "path": Array [
              "xaxis",
              "labels",
              "datetimeFormatter",
              "hour",
            ],
            "type": "string",
          },
        ],
        "name": "datetimeFormatter",
        "path": Array [
          "xaxis",
          "labels",
          "datetimeFormatter",
        ],
      },
    ],
    "name": "labels",
    "path": Array [
      "xaxis",
      "labels",
    ],
  },
  "max": Object {
    "_isDocValue": true,
    "description": "The highest number to be set for the x-axis. The graph drawing beyond this number will be clipped off",
    "name": "max",
    "options": undefined,
    "path": Array [
      "xaxis",
      "max",
    ],
    "type": "number",
  },
  "min": Object {
    "_isDocValue": true,
    "description": "The lowest number to be set for the x-axis. The graph drawing beyond this number will be clipped off",
    "name": "min",
    "options": undefined,
    "path": Array [
      "xaxis",
      "min",
    ],
    "type": "number",
  },
  "overwriteCategories": Object {
    "_isDocValue": true,
    "description": "Allows you to overwrite all the labels of the x-axis with these labels. Accepts an array of string values.",
    "name": "overwriteCategories",
    "options": undefined,
    "path": Array [
      "xaxis",
      "overwriteCategories",
    ],
    "type": "any",
  },
  "position": Object {
    "_isDocValue": true,
    "description": "Setting this option allows you to change the x-axis position",
    "name": "position",
    "options": Array [
      "bottom",
      "top",
    ],
    "path": Array [
      "xaxis",
      "position",
    ],
    "type": "string",
  },
  "range": Object {
    "_isDocValue": true,
    "description": "range takes the max value of x-axis, subtracts the provided range value and gets the min value based on that. So, technically
 it helps to keep the same range when min and max values gets updated dynamically",
    "name": "range",
    "options": undefined,
    "path": Array [
      "xaxis",
      "range",
    ],
    "type": "number",
  },
  "tickAmount": Object {
    "_isDocValue": true,
    "description": "Number of Tick Intervals to show.",
    "name": "tickAmount",
    "options": undefined,
    "path": Array [
      "xaxis",
      "tickAmount",
    ],
    "type": "number",
  },
  "tickPlacement": Object {
    "_isDocValue": true,
    "description": "Whether to draw the ticks in between the data-points or on the data-points.",
    "name": "tickPlacement",
    "options": Array [
      "between",
      "on",
    ],
    "path": Array [
      "xaxis",
      "tickPlacement",
    ],
    "type": "string",
  },
  "title": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Give the x-axis a title which will be displayed below the axis labels by default.",
        "name": "text",
        "options": undefined,
        "path": Array [
          "xaxis",
          "title",
          "text",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for xaxis title.",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "xaxis",
          "title",
          "offsetX",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for the xaxis title.",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "xaxis",
          "title",
          "offsetY",
        ],
        "type": "string",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "ForeColor of the x-axis title",
            "name": "color",
            "options": undefined,
            "path": Array [
              "xaxis",
              "title",
              "style",
              "color",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "FontSize for the x-axis title",
            "name": "fontSize",
            "options": undefined,
            "path": Array [
              "xaxis",
              "title",
              "style",
              "fontSize",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "FontFamily for the x-axis title",
            "name": "fontFamily",
            "options": undefined,
            "path": Array [
              "xaxis",
              "title",
              "style",
              "fontFamily",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Font-weight for the x-axis title",
            "name": "fontWeight",
            "options": undefined,
            "path": Array [
              "xaxis",
              "title",
              "style",
              "fontWeight",
            ],
            "type": "string | number",
          },
          Object {
            "_isDocValue": true,
            "description": "A custom Css Class to give to the x-axis title",
            "name": "cssClass",
            "options": undefined,
            "path": Array [
              "xaxis",
              "title",
              "style",
              "cssClass",
            ],
            "type": "string",
          },
        ],
        "name": "style",
        "path": Array [
          "xaxis",
          "title",
          "style",
        ],
      },
    ],
    "name": "title",
    "path": Array [
      "xaxis",
      "title",
    ],
  },
  "tooltip": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show tooltip on x-axis or not",
        "name": "enabled",
        "options": undefined,
        "path": Array [
          "xaxis",
          "tooltip",
          "enabled",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "A custom formatter function for the x-axis tooltip label. If undefined, the xaxis tooltip uses the default “X” value used in general tooltip.",
        "name": "formatter",
        "options": undefined,
        "path": Array [
          "xaxis",
          "tooltip",
          "formatter",
        ],
        "type": "function",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for x-axis tooltip",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "xaxis",
          "tooltip",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "FontSize for the x-axis tooltip text",
            "name": "fontSize",
            "options": undefined,
            "path": Array [
              "xaxis",
              "tooltip",
              "style",
              "fontSize",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "FontFamily for the x-axis tooltip text",
            "name": "fontFamily",
            "options": undefined,
            "path": Array [
              "xaxis",
              "tooltip",
              "style",
              "fontFamily",
            ],
            "type": "string",
          },
        ],
        "name": "style",
        "path": Array [
          "xaxis",
          "tooltip",
          "style",
        ],
      },
    ],
    "name": "tooltip",
    "path": Array [
      "xaxis",
      "tooltip",
    ],
  },
  "type": Object {
    "_isDocValue": true,
    "description": "Available Options",
    "name": "type",
    "options": Array [
      "category",
      "datetime",
      "numeric",
    ],
    "path": Array [
      "xaxis",
      "type",
    ],
    "type": "string",
  },
}
`;

exports[`convert can convert: xaxis intl 1`] = `
Object {
  "xaxis": "Xaxis",
  "xaxis.axisBorder": "Axis Border",
  "xaxis.axisBorder.color": "Color",
  "xaxis.axisBorder.height": "Height",
  "xaxis.axisBorder.offsetX": "Offset X",
  "xaxis.axisBorder.offsetY": "Offset Y",
  "xaxis.axisBorder.show": "Show",
  "xaxis.axisBorder.strokeWidth": "Stroke Width",
  "xaxis.axisBorder.width": "Width",
  "xaxis.axisTicks": "Axis Ticks",
  "xaxis.axisTicks.borderType": "Border Type",
  "xaxis.axisTicks.color": "Color",
  "xaxis.axisTicks.height": "Height",
  "xaxis.axisTicks.offsetX": "Offset X",
  "xaxis.axisTicks.offsetY": "Offset Y",
  "xaxis.axisTicks.show": "Show",
  "xaxis.categories": "Categories",
  "xaxis.crosshairs": "Crosshairs",
  "xaxis.crosshairs.dropShadow": "Drop Shadow",
  "xaxis.crosshairs.dropShadow.blur": "Blur",
  "xaxis.crosshairs.dropShadow.enabled": "Enabled",
  "xaxis.crosshairs.dropShadow.left": "Left",
  "xaxis.crosshairs.dropShadow.opacity": "Opacity",
  "xaxis.crosshairs.dropShadow.top": "Top",
  "xaxis.crosshairs.fill": "Fill",
  "xaxis.crosshairs.fill.color": "Color",
  "xaxis.crosshairs.fill.gradient": "Gradient",
  "xaxis.crosshairs.fill.gradient.colorFrom": "Color From",
  "xaxis.crosshairs.fill.gradient.colorTo": "Color To",
  "xaxis.crosshairs.fill.gradient.opacityFrom": "Opacity From",
  "xaxis.crosshairs.fill.gradient.opacityTo": "Opacity To",
  "xaxis.crosshairs.fill.gradient.stops": "Stops",
  "xaxis.crosshairs.fill.type": "Type",
  "xaxis.crosshairs.opacity": "Opacity",
  "xaxis.crosshairs.position": "Position",
  "xaxis.crosshairs.show": "Show",
  "xaxis.crosshairs.stroke": "Stroke",
  "xaxis.crosshairs.stroke.color": "Color",
  "xaxis.crosshairs.stroke.dashArray": "Dash Array",
  "xaxis.crosshairs.stroke.width": "Width",
  "xaxis.crosshairs.width": "Width",
  "xaxis.decimalsInFloat": "Decimals In Float",
  "xaxis.floating": "Floating",
  "xaxis.labels": "Labels",
  "xaxis.labels.datetimeFormatter": "Datetime Formatter",
  "xaxis.labels.datetimeFormatter.day": "Day",
  "xaxis.labels.datetimeFormatter.hour": "Hour",
  "xaxis.labels.datetimeFormatter.month": "Month",
  "xaxis.labels.datetimeFormatter.year": "Year",
  "xaxis.labels.datetimeUTC": "Datetime UTC",
  "xaxis.labels.format": "Format",
  "xaxis.labels.formatter": "Formatter",
  "xaxis.labels.formatter.": "",
  "xaxis.labels.hideOverlappingLabels": "Hide Overlapping Labels",
  "xaxis.labels.maxHeight": "Max Height",
  "xaxis.labels.minHeight": "Min Height",
  "xaxis.labels.offsetX": "Offset X",
  "xaxis.labels.offsetY": "Offset Y",
  "xaxis.labels.rotate": "Rotate",
  "xaxis.labels.rotateAlways": "Rotate Always",
  "xaxis.labels.show": "Show",
  "xaxis.labels.showDuplicates": "Show Duplicates",
  "xaxis.labels.style": "Style",
  "xaxis.labels.style.colors": "Colors",
  "xaxis.labels.style.cssClass": "Css Class",
  "xaxis.labels.style.fontFamily": "Font Family",
  "xaxis.labels.style.fontSize": "Font Size",
  "xaxis.labels.style.fontWeight": "Font Weight",
  "xaxis.labels.trim": "Trim",
  "xaxis.max": "Max",
  "xaxis.min": "Min",
  "xaxis.overwriteCategories": "Overwrite Categories",
  "xaxis.position": "Position",
  "xaxis.range": "Range",
  "xaxis.tickAmount": "Tick Amount",
  "xaxis.tickPlacement": "Tick Placement",
  "xaxis.title": "Title",
  "xaxis.title.offsetX": "Offset X",
  "xaxis.title.offsetY": "Offset Y",
  "xaxis.title.style": "Style",
  "xaxis.title.style.color": "Color",
  "xaxis.title.style.cssClass": "Css Class",
  "xaxis.title.style.fontFamily": "Font Family",
  "xaxis.title.style.fontSize": "Font Size",
  "xaxis.title.style.fontWeight": "Font Weight",
  "xaxis.title.text": "Text",
  "xaxis.tooltip": "Tooltip",
  "xaxis.tooltip.enabled": "Enabled",
  "xaxis.tooltip.formatter": "Formatter",
  "xaxis.tooltip.offsetY": "Offset Y",
  "xaxis.tooltip.style": "Style",
  "xaxis.tooltip.style.fontFamily": "Font Family",
  "xaxis.tooltip.style.fontSize": "Font Size",
  "xaxis.type": "Type",
}
`;

exports[`convert can convert: yaxis 1`] = `
Object {
  "axisBorder": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Draw a vertical border on the y-axis",
        "name": "show",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisBorder",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the horizontal axis border",
        "name": "color",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisBorder",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset of the axis border",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisBorder",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset of the axis border",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisBorder",
          "offsetY",
        ],
        "type": "number",
      },
    ],
    "name": "axisBorder",
    "path": Array [
      "yaxis",
      "axisBorder",
    ],
  },
  "axisTicks": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Draw ticks on the y-axis to specify intervals",
        "name": "show",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisTicks",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Color of the ticks",
        "name": "color",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisTicks",
          "color",
        ],
        "type": "any",
      },
      Object {
        "_isDocValue": true,
        "description": "Width of the ticks",
        "name": "width",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisTicks",
          "width",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset of the ticks",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisTicks",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset of the ticks",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "yaxis",
          "axisTicks",
          "offsetY",
        ],
        "type": "number",
      },
    ],
    "name": "axisTicks",
    "path": Array [
      "yaxis",
      "axisTicks",
    ],
  },
  "crosshairs": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show crosshairs on y-axis when user moves the mouse over chart area.",
        "name": "show",
        "options": undefined,
        "path": Array [
          "yaxis",
          "crosshairs",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Possible Options",
        "name": "position",
        "options": Array [
          "back",
          "front",
        ],
        "path": Array [
          "yaxis",
          "crosshairs",
          "position",
        ],
        "type": "string",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "Border Color of crosshairs",
            "name": "color",
            "options": undefined,
            "path": Array [
              "yaxis",
              "crosshairs",
              "stroke",
              "color",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Border Width of crosshairs",
            "name": "width",
            "options": undefined,
            "path": Array [
              "yaxis",
              "crosshairs",
              "stroke",
              "width",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "Creates dashes in borders of crosshairs. Higher number creates more space between dashes in the border.",
            "name": "dashArray",
            "options": undefined,
            "path": Array [
              "yaxis",
              "crosshairs",
              "stroke",
              "dashArray",
            ],
            "type": "any",
          },
        ],
        "name": "stroke",
        "path": Array [
          "yaxis",
          "crosshairs",
          "stroke",
        ],
      },
    ],
    "name": "crosshairs",
    "path": Array [
      "yaxis",
      "crosshairs",
    ],
  },
  "decimalsInFloat": Object {
    "_isDocValue": true,
    "description": "The number of fractions to display when there are floating values in y-axis.",
    "name": "decimalsInFloat",
    "options": undefined,
    "path": Array [
      "yaxis",
      "decimalsInFloat",
    ],
    "type": "number",
  },
  "floating": Object {
    "_isDocValue": true,
    "description": "Floating takes y-axis is taken out of normal flow and places y-axis on svg element directly, similar to an absolutely positioned
 element. Set the offsetX and offsetY then to adjust the position manually",
    "name": "floating",
    "options": undefined,
    "path": Array [
      "yaxis",
      "floating",
    ],
    "type": "boolean",
  },
  "forceNiceScale": Object {
    "_isDocValue": true,
    "description": "If set to",
    "name": "forceNiceScale",
    "options": undefined,
    "path": Array [
      "yaxis",
      "forceNiceScale",
    ],
    "type": "boolean",
  },
  "labels": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show labels on y-axis",
        "name": "show",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "show",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Available Options",
        "name": "align",
        "options": Array [
          "left",
          "center",
          "right",
        ],
        "path": Array [
          "yaxis",
          "labels",
          "align",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Minimum width for the y-axis labels",
        "name": "minWidth",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "minWidth",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Maximum width for the y-axis labels",
        "name": "maxWidth",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "maxWidth",
        ],
        "type": "number",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "ForeColor for the y-axis label",
            "name": "colors",
            "options": undefined,
            "path": Array [
              "yaxis",
              "labels",
              "style",
              "colors",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "FontSize for the y-axis label",
            "name": "fontSize",
            "options": undefined,
            "path": Array [
              "yaxis",
              "labels",
              "style",
              "fontSize",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Font-family for the y-axis label.",
            "name": "fontFamily",
            "options": undefined,
            "path": Array [
              "yaxis",
              "labels",
              "style",
              "fontFamily",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Font-weight for the y-axis label.",
            "name": "fontWeight",
            "options": undefined,
            "path": Array [
              "yaxis",
              "labels",
              "style",
              "fontWeight",
            ],
            "type": "string | number",
          },
          Object {
            "_isDocValue": true,
            "description": "A custom Css Class to give to the label elements",
            "name": "cssClass",
            "options": undefined,
            "path": Array [
              "yaxis",
              "labels",
              "style",
              "cssClass",
            ],
            "type": "string",
          },
        ],
        "name": "style",
        "path": Array [
          "yaxis",
          "labels",
          "style",
        ],
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for label",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "offsetX",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for label",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "offsetY",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Rotate y-axis text label to a specific angle from it’s center",
        "name": "rotate",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "rotate",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Applies a custom function for the yaxis value.",
        "name": "formatter",
        "options": undefined,
        "path": Array [
          "yaxis",
          "labels",
          "formatter",
        ],
        "type": "function",
      },
    ],
    "name": "labels",
    "path": Array [
      "yaxis",
      "labels",
    ],
  },
  "logBase": Object {
    "_isDocValue": true,
    "description": "Controls the logarithmic base. Default is 10",
    "name": "logBase",
    "options": undefined,
    "path": Array [
      "yaxis",
      "logBase",
    ],
    "type": "number",
  },
  "logarithmic": Object {
    "_isDocValue": true,
    "description": "A non-linear scale when there is a large range of values.",
    "name": "logarithmic",
    "options": undefined,
    "path": Array [
      "yaxis",
      "logarithmic",
    ],
    "type": "boolean",
  },
  "max": Object {
    "_isDocValue": true,
    "description": "Highest number to be set for the y-axis. The graph drawing beyond this number will be clipped off",
    "name": "max",
    "options": undefined,
    "path": Array [
      "yaxis",
      "max",
    ],
    "type": "number",
  },
  "min": Object {
    "_isDocValue": true,
    "description": "Lowest number to be set for the y-axis. The graph drawing beyond this number will be clipped off",
    "name": "min",
    "options": undefined,
    "path": Array [
      "yaxis",
      "min",
    ],
    "type": "number",
  },
  "opposite": Object {
    "_isDocValue": true,
    "description": "When enabled, will draw the yaxis on the right side of the chart",
    "name": "opposite",
    "options": undefined,
    "path": Array [
      "yaxis",
      "opposite",
    ],
    "type": "boolean",
  },
  "reversed": Object {
    "_isDocValue": true,
    "description": "Flip the chart upside down making it inversed and draw the y-axis from bigger to smaller numbers.",
    "name": "reversed",
    "options": undefined,
    "path": Array [
      "yaxis",
      "reversed",
    ],
    "type": "boolean",
  },
  "seriesName": Object {
    "_isDocValue": true,
    "description": "In a multiple y-axis chart, you can target the scale of a y-axis to a particular series by referencing through the",
    "name": "seriesName",
    "options": undefined,
    "path": Array [
      "yaxis",
      "seriesName",
    ],
    "type": "string",
  },
  "show": Object {
    "_isDocValue": true,
    "description": "Whether to display the y-axis or not.",
    "name": "show",
    "options": undefined,
    "path": Array [
      "yaxis",
      "show",
    ],
    "type": "boolean",
  },
  "showAlways": Object {
    "_isDocValue": true,
    "description": "Whether to hide y-axis when user toggles series through legend.",
    "name": "showAlways",
    "options": undefined,
    "path": Array [
      "yaxis",
      "showAlways",
    ],
    "type": "boolean",
  },
  "showForNullSeries": Object {
    "_isDocValue": true,
    "description": "When turned off, it will hide the y-axis completely for a series which has no data or a series with all null values.",
    "name": "showForNullSeries",
    "options": undefined,
    "path": Array [
      "yaxis",
      "showForNullSeries",
    ],
    "type": "boolean",
  },
  "tickAmount": Object {
    "_isDocValue": true,
    "description": "Number of Tick Intervals to show",
    "name": "tickAmount",
    "options": undefined,
    "path": Array [
      "yaxis",
      "tickAmount",
    ],
    "type": "number",
  },
  "title": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Give the y-axis a title which will be displayed below the axis labels by default.",
        "name": "text",
        "options": undefined,
        "path": Array [
          "yaxis",
          "title",
          "text",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Rotate the yaxis title either 90 or -90.",
        "name": "rotate",
        "options": undefined,
        "path": Array [
          "yaxis",
          "title",
          "rotate",
        ],
        "type": "number",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the left offset for yaxis title.",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "yaxis",
          "title",
          "offsetX",
        ],
        "type": "string",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for the yaxis title.",
        "name": "offsetY",
        "options": undefined,
        "path": Array [
          "yaxis",
          "title",
          "offsetY",
        ],
        "type": "string",
      },
      Object {
        "_isDocSection": true,
        "array": false,
        "children": Array [
          Object {
            "_isDocValue": true,
            "description": "ForeColor of the y-axis title",
            "name": "color",
            "options": undefined,
            "path": Array [
              "yaxis",
              "title",
              "style",
              "color",
            ],
            "type": "any",
          },
          Object {
            "_isDocValue": true,
            "description": "FontSize for the y-axis title",
            "name": "fontSize",
            "options": undefined,
            "path": Array [
              "yaxis",
              "title",
              "style",
              "fontSize",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "FontFamily for the y-axis title",
            "name": "fontFamily",
            "options": undefined,
            "path": Array [
              "yaxis",
              "title",
              "style",
              "fontFamily",
            ],
            "type": "string",
          },
          Object {
            "_isDocValue": true,
            "description": "Font-weight for the y-axis title",
            "name": "fontWeight",
            "options": undefined,
            "path": Array [
              "yaxis",
              "title",
              "style",
              "fontWeight",
            ],
            "type": "string | number",
          },
          Object {
            "_isDocValue": true,
            "description": "A custom Css Class to give to the y-axis title",
            "name": "cssClass",
            "options": undefined,
            "path": Array [
              "yaxis",
              "title",
              "style",
              "cssClass",
            ],
            "type": "string",
          },
        ],
        "name": "style",
        "path": Array [
          "yaxis",
          "title",
          "style",
        ],
      },
    ],
    "name": "title",
    "path": Array [
      "yaxis",
      "title",
    ],
  },
  "tooltip": Object {
    "_isDocSection": true,
    "array": false,
    "children": Array [
      Object {
        "_isDocValue": true,
        "description": "Show tooltip on y-axis",
        "name": "enabled",
        "options": undefined,
        "path": Array [
          "yaxis",
          "tooltip",
          "enabled",
        ],
        "type": "boolean",
      },
      Object {
        "_isDocValue": true,
        "description": "Sets the top offset for y-axis tooltip",
        "name": "offsetX",
        "options": undefined,
        "path": Array [
          "yaxis",
          "tooltip",
          "offsetX",
        ],
        "type": "number",
      },
    ],
    "name": "tooltip",
    "path": Array [
      "yaxis",
      "tooltip",
    ],
  },
}
`;

exports[`convert can convert: yaxis intl 1`] = `
Object {
  "yaxis": "Yaxis",
  "yaxis.axisBorder": "Axis Border",
  "yaxis.axisBorder.color": "Color",
  "yaxis.axisBorder.offsetX": "Offset X",
  "yaxis.axisBorder.offsetY": "Offset Y",
  "yaxis.axisBorder.show": "Show",
  "yaxis.axisTicks": "Axis Ticks",
  "yaxis.axisTicks.borderType": "Border Type",
  "yaxis.axisTicks.color": "Color",
  "yaxis.axisTicks.offsetX": "Offset X",
  "yaxis.axisTicks.offsetY": "Offset Y",
  "yaxis.axisTicks.show": "Show",
  "yaxis.axisTicks.width": "Width",
  "yaxis.crosshairs": "Crosshairs",
  "yaxis.crosshairs.position": "Position",
  "yaxis.crosshairs.show": "Show",
  "yaxis.crosshairs.stroke": "Stroke",
  "yaxis.crosshairs.stroke.color": "Color",
  "yaxis.crosshairs.stroke.dashArray": "Dash Array",
  "yaxis.crosshairs.stroke.width": "Width",
  "yaxis.decimalsInFloat": "Decimals In Float",
  "yaxis.floating": "Floating",
  "yaxis.forceNiceScale": "Force Nice Scale",
  "yaxis.labels": "Labels",
  "yaxis.labels.align": "Align",
  "yaxis.labels.formatter": "Formatter",
  "yaxis.labels.maxWidth": "Max Width",
  "yaxis.labels.minWidth": "Min Width",
  "yaxis.labels.offsetX": "Offset X",
  "yaxis.labels.offsetY": "Offset Y",
  "yaxis.labels.rotate": "Rotate",
  "yaxis.labels.show": "Show",
  "yaxis.labels.style": "Style",
  "yaxis.labels.style.colors": "Colors",
  "yaxis.labels.style.cssClass": "Css Class",
  "yaxis.labels.style.fontFamily": "Font Family",
  "yaxis.labels.style.fontSize": "Font Size",
  "yaxis.labels.style.fontWeight": "Font Weight",
  "yaxis.logBase": "Log Base",
  "yaxis.logarithmic": "Logarithmic",
  "yaxis.max": "Max",
  "yaxis.min": "Min",
  "yaxis.opposite": "Opposite",
  "yaxis.position": "Position",
  "yaxis.range": "Range",
  "yaxis.reversed": "Reversed",
  "yaxis.seriesName": "Series Name",
  "yaxis.show": "Show",
  "yaxis.showAlways": "Show Always",
  "yaxis.showForNullSeries": "Show For Null Series",
  "yaxis.tickAmount": "Tick Amount",
  "yaxis.title": "Title",
  "yaxis.title.offsetX": "Offset X",
  "yaxis.title.offsetY": "Offset Y",
  "yaxis.title.rotate": "Rotate",
  "yaxis.title.style": "Style",
  "yaxis.title.style.color": "Color",
  "yaxis.title.style.cssClass": "Css Class",
  "yaxis.title.style.fontFamily": "Font Family",
  "yaxis.title.style.fontSize": "Font Size",
  "yaxis.title.style.fontWeight": "Font Weight",
  "yaxis.title.text": "Text",
  "yaxis.tooltip": "Tooltip",
  "yaxis.tooltip.enabled": "Enabled",
  "yaxis.tooltip.offsetX": "Offset X",
}
`;
