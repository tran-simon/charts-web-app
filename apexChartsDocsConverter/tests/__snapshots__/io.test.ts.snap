// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`io can generate code: annotations 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const annotations: Options<ApexOptions['annotations']> = {
  position: new optionModel.SelectOptionField({
    front: { value: 'front', labelId: 'annotations.position.option.front' },
    back: { value: 'back', labelId: 'annotations.position.option.back' },
  }),
  yaxis: new optionModel.ListOptionField({
    y: new optionModel.NumberOptionField(),
    strokeDashArray: new optionModel.NumberOptionField(),
    borderColor: null,
    fillColor: null,
    opacity: new optionModel.NumberOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    width: new optionModel.TextOptionField(),
    yAxisIndex: new optionModel.NumberOptionField(),
    label: {
      borderColor: null,
      borderWidth: new optionModel.NumberOptionField(),
      borderRadius: new optionModel.NumberOptionField(),
      text: new optionModel.TextOptionField(),
      textAnchor: new optionModel.SelectOptionField({
        start: {
          value: 'start',
          labelId: 'annotations.yaxis.label.textAnchor.option.start',
        },
        middle: {
          value: 'middle',
          labelId: 'annotations.yaxis.label.textAnchor.option.middle',
        },
        end: {
          value: 'end',
          labelId: 'annotations.yaxis.label.textAnchor.option.end',
        },
      }),
      position: new optionModel.SelectOptionField({
        left: {
          value: 'left',
          labelId: 'annotations.yaxis.label.position.option.left',
        },
        right: {
          value: 'right',
          labelId: 'annotations.yaxis.label.position.option.right',
        },
      }),
      offsetX: new optionModel.NumberOptionField(),
      offsetY: new optionModel.NumberOptionField(),
      mouseEnter: null,
      mouseLeave: null,
      style: {
        background: null,
        color: null,
        fontSize: new optionModel.TextOptionField(),
        fontWeight: new optionModel.TextOptionField(),
        fontFamily: new optionModel.TextOptionField(),
        cssClass: new optionModel.TextOptionField(),
        padding: {
          left: new optionModel.NumberOptionField(),
          right: new optionModel.NumberOptionField(),
          top: new optionModel.NumberOptionField(),
          bottom: new optionModel.NumberOptionField(),
        },
      },
    },
  }),
  xaxis: new optionModel.ListOptionField({
    x: new optionModel.NumberOptionField(),
    strokeDashArray: new optionModel.NumberOptionField(),
    borderColor: null,
    fillColor: null,
    opacity: new optionModel.NumberOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    label: {
      borderColor: null,
      borderWidth: new optionModel.NumberOptionField(),
      borderRadius: new optionModel.NumberOptionField(),
      text: new optionModel.TextOptionField(),
      textAnchor: new optionModel.SelectOptionField({
        start: {
          value: 'start',
          labelId: 'annotations.xaxis.label.textAnchor.option.start',
        },
        middle: {
          value: 'middle',
          labelId: 'annotations.xaxis.label.textAnchor.option.middle',
        },
        end: {
          value: 'end',
          labelId: 'annotations.xaxis.label.textAnchor.option.end',
        },
      }),
      position: new optionModel.SelectOptionField({
        top: {
          value: 'top',
          labelId: 'annotations.xaxis.label.position.option.top',
        },
        bottom: {
          value: 'bottom',
          labelId: 'annotations.xaxis.label.position.option.bottom',
        },
      }),
      orientation: new optionModel.SelectOptionField({
        vertical: {
          value: 'vertical',
          labelId: 'annotations.xaxis.label.orientation.option.vertical',
        },
        horizontal: {
          value: 'horizontal',
          labelId: 'annotations.xaxis.label.orientation.option.horizontal',
        },
      }),
      offsetX: new optionModel.NumberOptionField(),
      offsetY: new optionModel.NumberOptionField(),
      mouseEnter: null,
      mouseLeave: null,
      style: {
        color: null,
        fontSize: new optionModel.TextOptionField(),
        fontWeight: new optionModel.TextOptionField(),
        fontFamily: new optionModel.TextOptionField(),
        cssClass: new optionModel.TextOptionField(),
      },
    },
  }),
  points: new optionModel.ListOptionField({
    x: new optionModel.TextOptionField(),
    y: new optionModel.NumberOptionField(),
    yAxisIndex: new optionModel.NumberOptionField(),
    seriesIndex: new optionModel.NumberOptionField(),
    mouseEnter: null,
    mouseLeave: null,
    marker: {
      size: new optionModel.NumberOptionField(),
      fillColor: new optionModel.TextOptionField(),
      strokeColor: new optionModel.TextOptionField(),
      strokeWidth: new optionModel.NumberOptionField(),
      shape: new optionModel.SelectOptionField({
        circle: {
          value: 'circle',
          labelId: 'annotations.points.marker.shape.option.circle',
        },
        square: {
          value: 'square',
          labelId: 'annotations.points.marker.shape.option.square',
        },
      }),
      radius: new optionModel.NumberOptionField(),
      offsetX: new optionModel.NumberOptionField(),
      offsetY: new optionModel.NumberOptionField(),
      cssClass: new optionModel.TextOptionField(),
    },
    label: {
      borderColor: null,
      borderWidth: new optionModel.NumberOptionField(),
      borderRadius: new optionModel.NumberOptionField(),
      text: new optionModel.TextOptionField(),
      textAnchor: new optionModel.SelectOptionField({
        start: {
          value: 'start',
          labelId: 'annotations.points.label.textAnchor.option.start',
        },
        middle: {
          value: 'middle',
          labelId: 'annotations.points.label.textAnchor.option.middle',
        },
        end: {
          value: 'end',
          labelId: 'annotations.points.label.textAnchor.option.end',
        },
      }),
      offsetX: new optionModel.NumberOptionField(),
      offsetY: new optionModel.NumberOptionField(),
      mouseEnter: null,
      mouseLeave: null,
      style: {
        background: null,
        color: null,
        fontSize: new optionModel.TextOptionField(),
        fontWeight: new optionModel.TextOptionField(),
        fontFamily: new optionModel.TextOptionField(),
        cssClass: new optionModel.TextOptionField(),
        padding: {
          left: new optionModel.NumberOptionField(),
          right: new optionModel.NumberOptionField(),
          top: new optionModel.NumberOptionField(),
          bottom: new optionModel.NumberOptionField(),
        },
      },
    },
    image: {
      path: new optionModel.TextOptionField(),
      width: new optionModel.NumberOptionField(),
      height: new optionModel.NumberOptionField(),
      offsetX: new optionModel.NumberOptionField(),
      offsetY: new optionModel.NumberOptionField(),
    },
  }),
  texts: new optionModel.ListOptionField({
    x: new optionModel.NumberOptionField(),
    y: new optionModel.NumberOptionField(),
    text: new optionModel.TextOptionField(),
    textAnchor: new optionModel.SelectOptionField({
      start: {
        value: 'start',
        labelId: 'annotations.texts.textAnchor.option.start',
      },
      middle: {
        value: 'middle',
        labelId: 'annotations.texts.textAnchor.option.middle',
      },
      end: { value: 'end', labelId: 'annotations.texts.textAnchor.option.end' },
    }),
    color: null,
    fontSize: new optionModel.TextOptionField(),
    fontWeight: new optionModel.TextOptionField(),
    fontFamily: new optionModel.TextOptionField(),
    appendTo: new optionModel.TextOptionField(),
    borderColor: null,
    borderRadius: new optionModel.NumberOptionField(),
    borderWidth: new optionModel.NumberOptionField(),
    paddingLeft: new optionModel.NumberOptionField(),
    paddingRight: new optionModel.NumberOptionField(),
    paddingTop: new optionModel.NumberOptionField(),
    paddingBottom: new optionModel.NumberOptionField(),
  }),
  images: new optionModel.ListOptionField({
    path: new optionModel.TextOptionField(),
    x: new optionModel.NumberOptionField(),
    y: new optionModel.NumberOptionField(),
    width: new optionModel.NumberOptionField(),
    height: new optionModel.NumberOptionField(),
    appendTo: new optionModel.TextOptionField(),
  }),
};

export default annotations;
"
`;

exports[`io can generate code: fill 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const fill: Options<ApexOptions['fill']> = {
  colors: null,
  opacity: new optionModel.NumberOptionField(),
  type: new optionModel.SelectOptionField({
    solid: { value: 'solid', labelId: 'fill.type.option.solid' },
    gradient: { value: 'gradient', labelId: 'fill.type.option.gradient' },
    pattern: { value: 'pattern', labelId: 'fill.type.option.pattern' },
    image: { value: 'image', labelId: 'fill.type.option.image' },
  }),
  gradient: {
    shade: new optionModel.SelectOptionField({
      light: { value: 'light', labelId: 'fill.gradient.shade.option.light' },
      dark: { value: 'dark', labelId: 'fill.gradient.shade.option.dark' },
    }),
    type: new optionModel.SelectOptionField({
      horizontal: {
        value: 'horizontal',
        labelId: 'fill.gradient.type.option.horizontal',
      },
      vertical: {
        value: 'vertical',
        labelId: 'fill.gradient.type.option.vertical',
      },
      diagonal1: {
        value: 'diagonal1',
        labelId: 'fill.gradient.type.option.diagonal1',
      },
      diagonal2: {
        value: 'diagonal2',
        labelId: 'fill.gradient.type.option.diagonal2',
      },
    }),
    shadeIntensity: new optionModel.NumberOptionField(),
    gradientToColors: null,
    inverseColors: new optionModel.BoolOptionField(),
    opacityFrom: null,
    opacityTo: null,
    stops: null,
    colorStops: null,
  },
  image: {
    src: null,
    width: new optionModel.NumberOptionField(),
    height: new optionModel.NumberOptionField(),
  },
  pattern: {
    style: new optionModel.SelectOptionField({
      verticalLines: {
        value: 'verticalLines',
        labelId: 'fill.pattern.style.option.verticalLines',
      },
      horizontalLines: {
        value: 'horizontalLines',
        labelId: 'fill.pattern.style.option.horizontalLines',
      },
      slantedLines: {
        value: 'slantedLines',
        labelId: 'fill.pattern.style.option.slantedLines',
      },
      squares: {
        value: 'squares',
        labelId: 'fill.pattern.style.option.squares',
      },
      circles: {
        value: 'circles',
        labelId: 'fill.pattern.style.option.circles',
      },
    }),
    width: new optionModel.NumberOptionField(),
    height: new optionModel.NumberOptionField(),
    strokeWidth: new optionModel.NumberOptionField(),
  },
};

export default fill;
"
`;

exports[`io can generate code: markers 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const markers: Options<ApexOptions['markers']> = {
  size: new optionModel.NumberOptionField(),
  colors: null,
  strokeColors: null,
  strokeWidth: null,
  strokeOpacity: null,
  strokeDashArray: null,
  fillOpacity: null,
  discrete: null,
  radius: new optionModel.NumberOptionField(),
  shape: new optionModel.SelectOptionField({
    circle: { value: 'circle', labelId: 'markers.shape.option.circle' },
    square: { value: 'square', labelId: 'markers.shape.option.square' },
  }),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  onClick: null,
  onDblClick: null,
  showNullDataPoints: new optionModel.BoolOptionField(),
  hover: {
    size: new optionModel.NumberOptionField(),
    sizeOffset: new optionModel.NumberOptionField(),
  },
};

export default markers;
"
`;

exports[`io can generate code: noData 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const noData: Options<ApexOptions['noData']> = {
  text: new optionModel.TextOptionField(),
  align: new optionModel.SelectOptionField({
    left: { value: 'left', labelId: 'noData.align.option.left' },
    center: { value: 'center', labelId: 'noData.align.option.center' },
    right: { value: 'right', labelId: 'noData.align.option.right' },
  }),
  verticalAlign: new optionModel.SelectOptionField({
    top: { value: 'top', labelId: 'noData.verticalAlign.option.top' },
    middle: { value: 'middle', labelId: 'noData.verticalAlign.option.middle' },
    bottom: { value: 'bottom', labelId: 'noData.verticalAlign.option.bottom' },
  }),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  style: {
    color: null,
    fontSize: new optionModel.TextOptionField(),
    fontFamily: new optionModel.TextOptionField(),
  },
};

export default noData;
"
`;

exports[`io can generate code: stroke 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const stroke: Options<ApexOptions['stroke']> = {
  show: new optionModel.BoolOptionField(),
  curve: new optionModel.SelectOptionField({
    smooth: { value: 'smooth', labelId: 'stroke.curve.option.smooth' },
    straight: { value: 'straight', labelId: 'stroke.curve.option.straight' },
    stepline: { value: 'stepline', labelId: 'stroke.curve.option.stepline' },
  }),
  lineCap: new optionModel.SelectOptionField({
    butt: { value: 'butt', labelId: 'stroke.lineCap.option.butt' },
    square: { value: 'square', labelId: 'stroke.lineCap.option.square' },
    round: { value: 'round', labelId: 'stroke.lineCap.option.round' },
  }),
  colors: null,
  width: null,
  dashArray: null,
};

export default stroke;
"
`;

exports[`io can generate code: title 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const title: Options<ApexOptions['title']> = {
  text: new optionModel.TextOptionField(),
  align: new optionModel.SelectOptionField({
    left: { value: 'left', labelId: 'title.align.option.left' },
    center: { value: 'center', labelId: 'title.align.option.center' },
    right: { value: 'right', labelId: 'title.align.option.right' },
  }),
  margin: new optionModel.NumberOptionField(),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  floating: new optionModel.BoolOptionField(),
  style: {
    fontSize: new optionModel.TextOptionField(),
    fontWeight: new optionModel.TextOptionField(),
    fontFamily: new optionModel.TextOptionField(),
    color: null,
  },
};

export default title;
"
`;

exports[`io can generate code: xaxis 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const xaxis: Options<ApexOptions['xaxis']> = {
  type: new optionModel.SelectOptionField({
    category: { value: 'category', labelId: 'xaxis.type.option.category' },
    datetime: { value: 'datetime', labelId: 'xaxis.type.option.datetime' },
    numeric: { value: 'numeric', labelId: 'xaxis.type.option.numeric' },
  }),
  categories: null,
  tickAmount: new optionModel.NumberOptionField(),
  tickPlacement: new optionModel.SelectOptionField({
    between: {
      value: 'between',
      labelId: 'xaxis.tickPlacement.option.between',
    },
    on: { value: 'on', labelId: 'xaxis.tickPlacement.option.on' },
  }),
  min: new optionModel.NumberOptionField(),
  max: new optionModel.NumberOptionField(),
  range: new optionModel.NumberOptionField(),
  floating: new optionModel.BoolOptionField(),
  decimalsInFloat: new optionModel.NumberOptionField(),
  overwriteCategories: null,
  position: new optionModel.SelectOptionField({
    bottom: { value: 'bottom', labelId: 'xaxis.position.option.bottom' },
    top: { value: 'top', labelId: 'xaxis.position.option.top' },
  }),
  labels: {
    show: new optionModel.BoolOptionField(),
    rotate: new optionModel.NumberOptionField(),
    rotateAlways: new optionModel.BoolOptionField(),
    hideOverlappingLabels: new optionModel.BoolOptionField(),
    showDuplicates: new optionModel.BoolOptionField(),
    trim: new optionModel.BoolOptionField(),
    minHeight: new optionModel.NumberOptionField(),
    maxHeight: new optionModel.NumberOptionField(),
    style: {
      colors: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField(),
    },
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    format: new optionModel.TextOptionField(),
    datetimeUTC: new optionModel.BoolOptionField(),
    datetimeFormatter: {
      year: new optionModel.TextOptionField(),
      month: new optionModel.TextOptionField(),
      day: new optionModel.TextOptionField(),
      hour: new optionModel.TextOptionField(),
    },
  },
  axisBorder: {
    show: new optionModel.BoolOptionField(),
    color: null,
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    strokeWidth: new optionModel.NumberOptionField(),
  },
  axisTicks: {
    show: new optionModel.BoolOptionField(),
    borderType: new optionModel.SelectOptionField({
      solid: {
        value: 'solid',
        labelId: 'xaxis.axisTicks.borderType.option.solid',
      },
      dotted: {
        value: 'dotted',
        labelId: 'xaxis.axisTicks.borderType.option.dotted',
      },
    }),
    color: null,
    height: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
  },
  title: {
    text: new optionModel.TextOptionField(),
    offsetX: new optionModel.TextOptionField(),
    offsetY: new optionModel.TextOptionField(),
    style: {
      color: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField(),
    },
  },
  crosshairs: {
    show: new optionModel.BoolOptionField(),
    width: new optionModel.NumberOptionField(),
    position: new optionModel.SelectOptionField({
      back: { value: 'back', labelId: 'xaxis.crosshairs.position.option.back' },
      front: {
        value: 'front',
        labelId: 'xaxis.crosshairs.position.option.front',
      },
    }),
    opacity: new optionModel.NumberOptionField(),
    stroke: {
      color: null,
      width: new optionModel.NumberOptionField(),
      dashArray: new optionModel.NumberOptionField(),
    },
    fill: {
      type: new optionModel.SelectOptionField({
        solid: {
          value: 'solid',
          labelId: 'xaxis.crosshairs.fill.type.option.solid',
        },
        gradient: {
          value: 'gradient',
          labelId: 'xaxis.crosshairs.fill.type.option.gradient',
        },
      }),
      color: new optionModel.TextOptionField(),
      gradient: {
        colorFrom: null,
        colorTo: null,
        stops: null,
        opacityFrom: new optionModel.NumberOptionField(),
        opacityTo: new optionModel.NumberOptionField(),
      },
    },
    dropShadow: {
      enabled: new optionModel.BoolOptionField(),
      top: new optionModel.NumberOptionField(),
      left: new optionModel.NumberOptionField(),
      blur: new optionModel.NumberOptionField(),
      opacity: new optionModel.NumberOptionField(),
    },
  },
  tooltip: {
    enabled: new optionModel.BoolOptionField(),
    formatter: null,
    offsetY: new optionModel.NumberOptionField(),
    style: {
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
    },
  },
};

export default xaxis;
"
`;

exports[`io can generate code: yaxis 1`] = `
"import { ApexOptions } from 'apexcharts';
import { Options } from '../model/optionModel';
import * as optionModel from '../model/optionModel';

const yaxis: Options<ApexOptions['yaxis']> = {
  show: new optionModel.BoolOptionField(),
  showAlways: new optionModel.BoolOptionField(),
  showForNullSeries: new optionModel.BoolOptionField(),
  seriesName: new optionModel.TextOptionField(),
  opposite: new optionModel.BoolOptionField(),
  reversed: new optionModel.BoolOptionField(),
  logarithmic: new optionModel.BoolOptionField(),
  logBase: new optionModel.NumberOptionField(),
  tickAmount: new optionModel.NumberOptionField(),
  min: new optionModel.NumberOptionField(),
  max: new optionModel.NumberOptionField(),
  forceNiceScale: new optionModel.BoolOptionField(),
  floating: new optionModel.BoolOptionField(),
  decimalsInFloat: new optionModel.NumberOptionField(),
  labels: {
    show: new optionModel.BoolOptionField(),
    align: new optionModel.SelectOptionField({
      left: { value: 'left', labelId: 'yaxis.labels.align.option.left' },
      center: { value: 'center', labelId: 'yaxis.labels.align.option.center' },
      right: { value: 'right', labelId: 'yaxis.labels.align.option.right' },
    }),
    minWidth: new optionModel.NumberOptionField(),
    maxWidth: new optionModel.NumberOptionField(),
    style: {
      colors: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField(),
    },
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    rotate: new optionModel.NumberOptionField(),
    formatter: null,
  },
  axisBorder: {
    show: new optionModel.BoolOptionField(),
    color: null,
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
  },
  axisTicks: {
    show: new optionModel.BoolOptionField(),
    color: null,
    width: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
  },
  title: {
    text: new optionModel.TextOptionField(),
    rotate: new optionModel.NumberOptionField(),
    offsetX: new optionModel.TextOptionField(),
    offsetY: new optionModel.TextOptionField(),
    style: {
      color: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField(),
    },
  },
  crosshairs: {
    show: new optionModel.BoolOptionField(),
    position: new optionModel.SelectOptionField({
      back: { value: 'back', labelId: 'yaxis.crosshairs.position.option.back' },
      front: {
        value: 'front',
        labelId: 'yaxis.crosshairs.position.option.front',
      },
    }),
    stroke: {
      color: null,
      width: null,
      dashArray: null,
    },
  },
  tooltip: {
    enabled: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField(),
  },
};

export default yaxis;
"
`;

exports[`io can generate intl code: annotations 1`] = `
"export default {
  'annotations.position': 'Position',
  'annotations.yaxis': 'Yaxis',
  'annotations.yaxis.y': 'Y',
  'annotations.yaxis.strokeDashArray': 'Stroke Dash Array',
  'annotations.yaxis.borderColor': 'Border Color',
  'annotations.yaxis.fillColor': 'Fill Color',
  'annotations.yaxis.opacity': 'Opacity',
  'annotations.yaxis.offsetX': 'Offset X',
  'annotations.yaxis.offsetY': 'Offset Y',
  'annotations.yaxis.width': 'Width',
  'annotations.yaxis.yAxisIndex': 'Y Axis Index',
  'annotations.yaxis.label': 'Label',
  'annotations.yaxis.label.borderColor': 'Border Color',
  'annotations.yaxis.label.borderWidth': 'Border Width',
  'annotations.yaxis.label.borderRadius': 'Border Radius',
  'annotations.yaxis.label.text': 'Text',
  'annotations.yaxis.label.textAnchor': 'Text Anchor',
  'annotations.yaxis.label.position': 'Position',
  'annotations.yaxis.label.offsetX': 'Offset X',
  'annotations.yaxis.label.offsetY': 'Offset Y',
  'annotations.yaxis.label.mouseEnter': 'Mouse Enter',
  'annotations.yaxis.label.mouseLeave': 'Mouse Leave',
  'annotations.yaxis.label.style': 'Style',
  'annotations.yaxis.label.style.background': 'Background',
  'annotations.yaxis.label.style.color': 'Color',
  'annotations.yaxis.label.style.fontSize': 'Font Size',
  'annotations.yaxis.label.style.fontWeight': 'Font Weight',
  'annotations.yaxis.label.style.fontFamily': 'Font Family',
  'annotations.yaxis.label.style.cssClass': 'Css Class',
  'annotations.yaxis.label.style.padding': 'Padding',
  'annotations.yaxis.label.style.padding.left': 'Left',
  'annotations.yaxis.label.style.padding.right': 'Right',
  'annotations.yaxis.label.style.padding.top': 'Top',
  'annotations.yaxis.label.style.padding.bottom': 'Bottom',
  'annotations.xaxis': 'Xaxis',
  'annotations.xaxis.x': 'X',
  'annotations.xaxis.strokeDashArray': 'Stroke Dash Array',
  'annotations.xaxis.borderColor': 'Border Color',
  'annotations.xaxis.fillColor': 'Fill Color',
  'annotations.xaxis.opacity': 'Opacity',
  'annotations.xaxis.offsetX': 'Offset X',
  'annotations.xaxis.offsetY': 'Offset Y',
  'annotations.xaxis.label': 'Label',
  'annotations.xaxis.label.borderColor': 'Border Color',
  'annotations.xaxis.label.borderWidth': 'Border Width',
  'annotations.xaxis.label.borderRadius': 'Border Radius',
  'annotations.xaxis.label.text': 'Text',
  'annotations.xaxis.label.textAnchor': 'Text Anchor',
  'annotations.xaxis.label.position': 'Position',
  'annotations.xaxis.label.orientation': 'Orientation',
  'annotations.xaxis.label.offsetX': 'Offset X',
  'annotations.xaxis.label.offsetY': 'Offset Y',
  'annotations.xaxis.label.mouseEnter': 'Mouse Enter',
  'annotations.xaxis.label.mouseLeave': 'Mouse Leave',
  'annotations.xaxis.label.style': 'Style',
  'annotations.xaxis.label.style.color': 'Color',
  'annotations.xaxis.label.style.fontSize': 'Font Size',
  'annotations.xaxis.label.style.fontWeight': 'Font Weight',
  'annotations.xaxis.label.style.fontFamily': 'Font Family',
  'annotations.xaxis.label.style.cssClass': 'Css Class',
  'annotations.points': 'Points',
  'annotations.points.x': 'X',
  'annotations.points.y': 'Y',
  'annotations.points.yAxisIndex': 'Y Axis Index',
  'annotations.points.seriesIndex': 'Series Index',
  'annotations.points.mouseEnter': 'Mouse Enter',
  'annotations.points.mouseLeave': 'Mouse Leave',
  'annotations.points.marker': 'Marker',
  'annotations.points.marker.size': 'Size',
  'annotations.points.marker.fillColor': 'Fill Color',
  'annotations.points.marker.strokeColor': 'Stroke Color',
  'annotations.points.marker.strokeWidth': 'Stroke Width',
  'annotations.points.marker.shape': 'Shape',
  'annotations.points.marker.radius': 'Radius',
  'annotations.points.marker.offsetX': 'Offset X',
  'annotations.points.marker.offsetY': 'Offset Y',
  'annotations.points.marker.cssClass': 'Css Class',
  'annotations.points.label': 'Label',
  'annotations.points.label.borderColor': 'Border Color',
  'annotations.points.label.borderWidth': 'Border Width',
  'annotations.points.label.borderRadius': 'Border Radius',
  'annotations.points.label.text': 'Text',
  'annotations.points.label.textAnchor': 'Text Anchor',
  'annotations.points.label.offsetX': 'Offset X',
  'annotations.points.label.offsetY': 'Offset Y',
  'annotations.points.label.mouseEnter': 'Mouse Enter',
  'annotations.points.label.mouseLeave': 'Mouse Leave',
  'annotations.points.label.style': 'Style',
  'annotations.points.label.style.background': 'Background',
  'annotations.points.label.style.color': 'Color',
  'annotations.points.label.style.fontSize': 'Font Size',
  'annotations.points.label.style.fontWeight': 'Font Weight',
  'annotations.points.label.style.fontFamily': 'Font Family',
  'annotations.points.label.style.cssClass': 'Css Class',
  'annotations.points.label.style.padding': 'Padding',
  'annotations.points.label.style.padding.left': 'Left',
  'annotations.points.label.style.padding.right': 'Right',
  'annotations.points.label.style.padding.top': 'Top',
  'annotations.points.label.style.padding.bottom': 'Bottom',
  'annotations.points.image': 'Image',
  'annotations.points.image.path': 'Path',
  'annotations.points.image.width': 'Width',
  'annotations.points.image.height': 'Height',
  'annotations.points.image.offsetX': 'Offset X',
  'annotations.points.image.offsetY': 'Offset Y',
  'annotations.texts': 'Texts',
  'annotations.texts.x': 'X',
  'annotations.texts.y': 'Y',
  'annotations.texts.text': 'Text',
  'annotations.texts.textAnchor': 'Text Anchor',
  'annotations.texts.color': 'Color',
  'annotations.texts.fontSize': 'Font Size',
  'annotations.texts.fontWeight': 'Font Weight',
  'annotations.texts.fontFamily': 'Font Family',
  'annotations.texts.appendTo': 'Append To',
  'annotations.texts.borderColor': 'Border Color',
  'annotations.texts.borderRadius': 'Border Radius',
  'annotations.texts.borderWidth': 'Border Width',
  'annotations.texts.paddingLeft': 'Padding Left',
  'annotations.texts.paddingRight': 'Padding Right',
  'annotations.texts.paddingTop': 'Padding Top',
  'annotations.texts.paddingBottom': 'Padding Bottom',
  'annotations.images': 'Images',
  'annotations.images.path': 'Path',
  'annotations.images.x': 'X',
  'annotations.images.y': 'Y',
  'annotations.images.width': 'Width',
  'annotations.images.height': 'Height',
  'annotations.images.appendTo': 'Append To',
  annotations: 'Annotations',
};
"
`;

exports[`io can generate intl code: fill 1`] = `
"export default {
  'fill.colors': 'Colors',
  'fill.opacity': 'Opacity',
  'fill.type': 'Type',
  'fill.gradient': 'Gradient',
  'fill.gradient.shade': 'Shade',
  'fill.gradient.type': 'Type',
  'fill.gradient.shadeIntensity': 'Shade Intensity',
  'fill.gradient.gradientToColors': 'Gradient To Colors',
  'fill.gradient.inverseColors': 'Inverse Colors',
  'fill.gradient.opacityFrom': 'Opacity From',
  'fill.gradient.opacityTo': 'Opacity To',
  'fill.gradient.stops': 'Stops',
  'fill.gradient.colorStops': 'Color Stops',
  'fill.image': 'Image',
  'fill.image.src': 'Src',
  'fill.image.width': 'Width',
  'fill.image.height': 'Height',
  'fill.pattern': 'Pattern',
  'fill.pattern.style': 'Style',
  'fill.pattern.width': 'Width',
  'fill.pattern.height': 'Height',
  'fill.pattern.strokeWidth': 'Stroke Width',
  fill: 'Fill',
};
"
`;

exports[`io can generate intl code: markers 1`] = `
"export default {
  'markers.size': 'Size',
  'markers.colors': 'Colors',
  'markers.strokeColors': 'Stroke Colors',
  'markers.strokeWidth': 'Stroke Width',
  'markers.strokeOpacity': 'Stroke Opacity',
  'markers.strokeDashArray': 'Stroke Dash Array',
  'markers.fillOpacity': 'Fill Opacity',
  'markers.discrete': 'Discrete',
  'markers.radius': 'Radius',
  'markers.shape': 'Shape',
  'markers.offsetX': 'Offset X',
  'markers.offsetY': 'Offset Y',
  'markers.onClick': 'On Click',
  'markers.onDblClick': 'On Dbl Click',
  'markers.showNullDataPoints': 'Show Null Data Points',
  'markers.hover': 'Hover',
  'markers.hover.size': 'Size',
  'markers.hover.sizeOffset': 'Size Offset',
  markers: 'Markers',
};
"
`;

exports[`io can generate intl code: noData 1`] = `
"export default {
  'noData.text': 'Text',
  'noData.align': 'Align',
  'noData.verticalAlign': 'Vertical Align',
  'noData.offsetX': 'Offset X',
  'noData.offsetY': 'Offset Y',
  'noData.style': 'Style',
  'noData.style.color': 'Color',
  'noData.style.fontSize': 'Font Size',
  'noData.style.fontFamily': 'Font Family',
  noData: 'No Data',
};
"
`;

exports[`io can generate intl code: stroke 1`] = `
"export default {
  'stroke.show': 'Show',
  'stroke.curve': 'Curve',
  'stroke.lineCap': 'Line Cap',
  'stroke.colors': 'Colors',
  'stroke.width': 'Width',
  'stroke.dashArray': 'Dash Array',
  stroke: 'Stroke',
};
"
`;

exports[`io can generate intl code: title 1`] = `
"export default {
  'title.text': 'Text',
  'title.align': 'Align',
  'title.margin': 'Margin',
  'title.offsetX': 'Offset X',
  'title.offsetY': 'Offset Y',
  'title.floating': 'Floating',
  'title.style': 'Style',
  'title.style.fontSize': 'Font Size',
  'title.style.fontWeight': 'Font Weight',
  'title.style.fontFamily': 'Font Family',
  'title.style.color': 'Color',
  title: 'Title',
};
"
`;

exports[`io can generate intl code: xaxis 1`] = `
"export default {
  'xaxis.type': 'Type',
  'xaxis.categories': 'Categories',
  'xaxis.tickAmount': 'Tick Amount',
  'xaxis.tickPlacement': 'Tick Placement',
  'xaxis.min': 'Min',
  'xaxis.max': 'Max',
  'xaxis.range': 'Range',
  'xaxis.floating': 'Floating',
  'xaxis.decimalsInFloat': 'Decimals In Float',
  'xaxis.overwriteCategories': 'Overwrite Categories',
  'xaxis.position': 'Position',
  'xaxis.labels': 'Labels',
  'xaxis.labels.show': 'Show',
  'xaxis.labels.rotate': 'Rotate',
  'xaxis.labels.rotateAlways': 'Rotate Always',
  'xaxis.labels.hideOverlappingLabels': 'Hide Overlapping Labels',
  'xaxis.labels.showDuplicates': 'Show Duplicates',
  'xaxis.labels.trim': 'Trim',
  'xaxis.labels.minHeight': 'Min Height',
  'xaxis.labels.maxHeight': 'Max Height',
  'xaxis.labels.style': 'Style',
  'xaxis.labels.style.colors': 'Colors',
  'xaxis.labels.style.fontSize': 'Font Size',
  'xaxis.labels.style.fontFamily': 'Font Family',
  'xaxis.labels.style.fontWeight': 'Font Weight',
  'xaxis.labels.style.cssClass': 'Css Class',
  'xaxis.labels.offsetX': 'Offset X',
  'xaxis.labels.offsetY': 'Offset Y',
  'xaxis.labels.format': 'Format',
  'xaxis.labels.formatter': 'Formatter',
  'xaxis.labels.formatter.': '',
  'xaxis.labels.datetimeUTC': 'Datetime UTC',
  'xaxis.labels.datetimeFormatter': 'Datetime Formatter',
  'xaxis.labels.datetimeFormatter.year': 'Year',
  'xaxis.labels.datetimeFormatter.month': 'Month',
  'xaxis.labels.datetimeFormatter.day': 'Day',
  'xaxis.labels.datetimeFormatter.hour': 'Hour',
  'xaxis.axisBorder': 'Axis Border',
  'xaxis.axisBorder.show': 'Show',
  'xaxis.axisBorder.color': 'Color',
  'xaxis.axisBorder.height': 'Height',
  'xaxis.axisBorder.width': 'Width',
  'xaxis.axisBorder.offsetX': 'Offset X',
  'xaxis.axisBorder.offsetY': 'Offset Y',
  'xaxis.axisBorder.strokeWidth': 'Stroke Width',
  'xaxis.axisTicks': 'Axis Ticks',
  'xaxis.axisTicks.show': 'Show',
  'xaxis.axisTicks.borderType': 'Border Type',
  'xaxis.axisTicks.color': 'Color',
  'xaxis.axisTicks.height': 'Height',
  'xaxis.axisTicks.offsetX': 'Offset X',
  'xaxis.axisTicks.offsetY': 'Offset Y',
  'xaxis.title': 'Title',
  'xaxis.title.text': 'Text',
  'xaxis.title.offsetX': 'Offset X',
  'xaxis.title.offsetY': 'Offset Y',
  'xaxis.title.style': 'Style',
  'xaxis.title.style.color': 'Color',
  'xaxis.title.style.fontSize': 'Font Size',
  'xaxis.title.style.fontFamily': 'Font Family',
  'xaxis.title.style.fontWeight': 'Font Weight',
  'xaxis.title.style.cssClass': 'Css Class',
  'xaxis.crosshairs': 'Crosshairs',
  'xaxis.crosshairs.show': 'Show',
  'xaxis.crosshairs.width': 'Width',
  'xaxis.crosshairs.position': 'Position',
  'xaxis.crosshairs.opacity': 'Opacity',
  'xaxis.crosshairs.stroke': 'Stroke',
  'xaxis.crosshairs.stroke.color': 'Color',
  'xaxis.crosshairs.stroke.width': 'Width',
  'xaxis.crosshairs.stroke.dashArray': 'Dash Array',
  'xaxis.crosshairs.fill': 'Fill',
  'xaxis.crosshairs.fill.type': 'Type',
  'xaxis.crosshairs.fill.color': 'Color',
  'xaxis.crosshairs.fill.gradient': 'Gradient',
  'xaxis.crosshairs.fill.gradient.colorFrom': 'Color From',
  'xaxis.crosshairs.fill.gradient.colorTo': 'Color To',
  'xaxis.crosshairs.fill.gradient.stops': 'Stops',
  'xaxis.crosshairs.fill.gradient.opacityFrom': 'Opacity From',
  'xaxis.crosshairs.fill.gradient.opacityTo': 'Opacity To',
  'xaxis.crosshairs.dropShadow': 'Drop Shadow',
  'xaxis.crosshairs.dropShadow.enabled': 'Enabled',
  'xaxis.crosshairs.dropShadow.top': 'Top',
  'xaxis.crosshairs.dropShadow.left': 'Left',
  'xaxis.crosshairs.dropShadow.blur': 'Blur',
  'xaxis.crosshairs.dropShadow.opacity': 'Opacity',
  'xaxis.tooltip': 'Tooltip',
  'xaxis.tooltip.enabled': 'Enabled',
  'xaxis.tooltip.formatter': 'Formatter',
  'xaxis.tooltip.offsetY': 'Offset Y',
  'xaxis.tooltip.style': 'Style',
  'xaxis.tooltip.style.fontSize': 'Font Size',
  'xaxis.tooltip.style.fontFamily': 'Font Family',
  xaxis: 'Xaxis',
};
"
`;

exports[`io can generate intl code: yaxis 1`] = `
"export default {
  'yaxis.show': 'Show',
  'yaxis.showAlways': 'Show Always',
  'yaxis.showForNullSeries': 'Show For Null Series',
  'yaxis.seriesName': 'Series Name',
  'yaxis.opposite': 'Opposite',
  'yaxis.reversed': 'Reversed',
  'yaxis.logarithmic': 'Logarithmic',
  'yaxis.logBase': 'Log Base',
  'yaxis.tickAmount': 'Tick Amount',
  'yaxis.min': 'Min',
  'yaxis.max': 'Max',
  'yaxis.forceNiceScale': 'Force Nice Scale',
  'yaxis.floating': 'Floating',
  'yaxis.decimalsInFloat': 'Decimals In Float',
  'yaxis.labels': 'Labels',
  'yaxis.labels.show': 'Show',
  'yaxis.labels.align': 'Align',
  'yaxis.labels.minWidth': 'Min Width',
  'yaxis.labels.maxWidth': 'Max Width',
  'yaxis.labels.style': 'Style',
  'yaxis.labels.style.colors': 'Colors',
  'yaxis.labels.style.fontSize': 'Font Size',
  'yaxis.labels.style.fontFamily': 'Font Family',
  'yaxis.labels.style.fontWeight': 'Font Weight',
  'yaxis.labels.style.cssClass': 'Css Class',
  'yaxis.labels.offsetX': 'Offset X',
  'yaxis.labels.offsetY': 'Offset Y',
  'yaxis.labels.rotate': 'Rotate',
  'yaxis.labels.formatter': 'Formatter',
  'yaxis.axisBorder': 'Axis Border',
  'yaxis.axisBorder.show': 'Show',
  'yaxis.axisBorder.color': 'Color',
  'yaxis.axisBorder.offsetX': 'Offset X',
  'yaxis.axisBorder.offsetY': 'Offset Y',
  'yaxis.axisTicks': 'Axis Ticks',
  'yaxis.axisTicks.show': 'Show',
  'yaxis.axisTicks.borderType': 'Border Type',
  'yaxis.axisTicks.color': 'Color',
  'yaxis.axisTicks.width': 'Width',
  'yaxis.axisTicks.offsetX': 'Offset X',
  'yaxis.axisTicks.offsetY': 'Offset Y',
  'yaxis.range': 'Range',
  'yaxis.position': 'Position',
  'yaxis.title': 'Title',
  'yaxis.title.text': 'Text',
  'yaxis.title.rotate': 'Rotate',
  'yaxis.title.offsetX': 'Offset X',
  'yaxis.title.offsetY': 'Offset Y',
  'yaxis.title.style': 'Style',
  'yaxis.title.style.color': 'Color',
  'yaxis.title.style.fontSize': 'Font Size',
  'yaxis.title.style.fontFamily': 'Font Family',
  'yaxis.title.style.fontWeight': 'Font Weight',
  'yaxis.title.style.cssClass': 'Css Class',
  'yaxis.crosshairs': 'Crosshairs',
  'yaxis.crosshairs.show': 'Show',
  'yaxis.crosshairs.position': 'Position',
  'yaxis.crosshairs.stroke': 'Stroke',
  'yaxis.crosshairs.stroke.color': 'Color',
  'yaxis.crosshairs.stroke.width': 'Width',
  'yaxis.crosshairs.stroke.dashArray': 'Dash Array',
  'yaxis.tooltip': 'Tooltip',
  'yaxis.tooltip.enabled': 'Enabled',
  'yaxis.tooltip.offsetX': 'Offset X',
  yaxis: 'Yaxis',
};
"
`;

exports[`io can parseHtml: annotations 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "annotations",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "annotations",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "position",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "position: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to put the annotations behind the charts or in front of it. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available Options: ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "front",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "back",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "yaxis",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "yaxis",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "yaxis: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yvalue",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "y: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Value on which the annotation will be drawn",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "y2value",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "y2: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " If you provide this additional y2 value, a region will be drawn from y to y2.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yStrokeDashArray",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "strokeDashArray: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Creates dashes in borders of the SVG path. A higher number creates more space between dashes in the border.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yborderColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderColor: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yFillColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fillColor: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fill Color of the region. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " Only applicable if ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "href",
                        "value": "#y2value",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "y2",
                        "type": "text",
                      },
                    ],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "content": " is provided.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yOpacity",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "opacity: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Opacity of the filled region.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yoffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yoffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: String | Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the width for annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "yAxisIndex",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "yAxisIndex: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " When there are multiple y-axis, setting this options will put the annotation for that particular y-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "ylabel",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "label:",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "yLabelborderColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderColor: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Color of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "yLabelborderWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderWidth: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border width of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "yLabelborderRadius",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderRadius: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border-radius of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ytext",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "text: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Text for tha annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ytextAnchor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "textAnchor: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " The alignment of text relative to label’s drawing position ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                      Object {
                        "content": " Accepted values",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "start",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "middle",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "end",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "yposition",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "position: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Available Options ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "left",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "right",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ylabelOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the left offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ylabelOffsetY",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetY: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the top offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ylabelMouseEnter",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseEnter: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse enter the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ylabelMouseLeave",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseLeave: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse leave the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "ystyle",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "style",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelBackground",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "background: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Background Color for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelColor",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "color: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " ForeColor for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelFontSize",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontSize: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " FontSize for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelFontWeight",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontWeight: String | Number",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-weight for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelFontFamily",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontFamily: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-family for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelCssClass",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "cssClass: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " A custom Css Class to give to the annotation label elements",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "ylabelPadding",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "padding",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "ylabelPaddingLeft",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "left: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Left padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "ylabelPaddingRight",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "right: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Right padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "ylabelPaddingTop",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "top: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Top padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "ylabelPaddingBottom",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "bottom: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Bottom padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "xaxis",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "xaxis",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "xaxis: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xvalue",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "x: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Value on which the annotation will be drawn",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "x2value",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "x2: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " If you provide this additional x2 value, a region will be drawn from x to x2.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xStrokeDashArray",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "strokeDashArray: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Creates dashes in borders of SVG path. A higher number creates more space between dashes in the border.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xborderColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderColor: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xFillColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fillColor: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fill Color of the region. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " Only applicable if ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "href",
                        "value": "#x2value",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "x2",
                        "type": "text",
                      },
                    ],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "content": " is provided.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xOpacity",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "opacity: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Opacity of the filled region.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xoffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xoffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for annotation line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "xlabel",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "label:",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xLabelborderColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderColor: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border color of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xLabelborderWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderWidth: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border width of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xLabelborderRadius",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderRadius: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border-radius of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xtext",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "text: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Text for tha annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xtextAnchor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "textAnchor: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " The alignment of text relative to label’s drawing position ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                      Object {
                        "content": " Accepted values",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "start",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "middle",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "end",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xposition",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "position: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Available Options ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "top",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "bottom",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xorientation",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "orientation: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Available Options ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "vertical",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "horizontal",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xlabelOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the left offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xlabelOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the left offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xlabelOffsetY",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetY: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the top offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xlabelMouseEnter",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseEnter: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse enter the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xlabelMouseLeave",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseLeave: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse leave the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "xstyle",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "style",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "xlabelColor",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "color: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " ForeColor for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "xlabelFontSize",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontSize: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " FontSize for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "xlabelFontWeight",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontWeight: String | Number",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-weight for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "xlabelFontFamily",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontFamily: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-family for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "xlabelCssClass",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "cssClass: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " A custom Css Class to give to the annotation label elements",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "points",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "point",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "points: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointxvalue",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "x: Number || String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " X Value on which the annotation will be drawn (can be either timestamp for datetime x-axis or string category for category
 x-axis)",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointyvalue",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "y: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Y Value on which the annotation will be drawn",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointyAxisIndex",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "yAxisIndex: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " When there are multiple y-axis, setting this options will put the point annotation for that particular y-axis’ y value",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointSeriesIndex",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "seriesIndex: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " In a multiple series, you will have to specify which series the annotation’s y value belongs to. Not required for single
 series",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointMouseEnter",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "mouseEnter: Function",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fires when user’s mouse enter the marker of point annotation.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointMouseLeave",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "mouseLeave: Function",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fires when user’s mouse leave the marker of point annotation.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "marker",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "class",
                "value": "marker",
              },
            ],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "marker",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "size: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Size of the marker.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "fillColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fillColor: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fill Color of the marker point.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "strokeColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "strokeColor: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Stroke Color of the marker point.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "strokeWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "strokeWidth: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Stroke Size of the marker point.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerShape",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "shape: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Shape of the marker. ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                      Object {
                        "content": " Available Options for shape",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "circle",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "square",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerRadius",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "radius: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Radius of the marker (applies to square shape)",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the left offset of the marker",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerOffsetY",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetY: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the top offset of the marker",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "markerCssClass",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "cssClass: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Additional CSS classes to append to the marker",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointlabel",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "label:",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelborderColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderColor: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Color of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelborderWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderWidth: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border width of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelborderRadius",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "borderRadius: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border-radius of the label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabeltext",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "text: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Text for tha annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabeltextAnchor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "textAnchor: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " The alignment of text relative to label’s drawing position ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                      Object {
                        "content": " Accepted values",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "start",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "middle",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "end",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the left offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelOffsetY",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetY: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Sets the top offset for annotation label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelMouseEnter",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseEnter: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse enter the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelMouseLeave",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "mouseLeave: Function",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fires when user’s mouse leave the label of the annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointlabelstyle",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "style",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelBackground",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "background: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Background Color for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelColor",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "color: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " ForeColor for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelFontSize",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontSize: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " FontSize for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelFontWeight",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontWeight: String | Number",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-weight for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelFontFamily",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "fontFamily: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Font-family for the annotation label",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelCssClass",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "cssClass: String",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " A custom Css Class to give to the annotation label elements",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "pointlabelPadding",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "padding",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "pointlabelPaddingLeft",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "left: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Left padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "pointlabelPaddingRight",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "right: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Right padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "pointlabelPaddingTop",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "top: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Top padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                      Object {
                        "content": " ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "id",
                            "value": "pointlabelPaddingBottom",
                          },
                          Object {
                            "key": "class",
                            "value": "anchor",
                          },
                        ],
                        "children": Array [],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": "bottom: Number",
                                "type": "text",
                              },
                            ],
                            "tagName": "h3",
                            "type": "element",
                          },
                          Object {
                            "attributes": Array [],
                            "children": Array [
                              Object {
                                "content": " Bottom padding for the label",
                                "type": "text",
                              },
                            ],
                            "tagName": "p",
                            "type": "element",
                          },
                        ],
                        "tagName": "div",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "pointimage",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "image:",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointimagePath",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "path: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Provide a full path of the image to display in place of annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointimageWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "width: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Width of image annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointimageHeight",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "height: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Height of image annotation.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointimageOffsetX",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetX: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Left offset of the image.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "pointimageOffsetY",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "offsetY: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Top offset of the image.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "texts",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "texts",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "texts: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textx",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "x: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " X (left) position for the text relative to the element specified in ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "appendTo",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " property",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "texty",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "y: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Y (top) position for the text relative to the element specified in ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "appendTo",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " property",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "text",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "text: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " The main text to be displayed",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textAnchor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "textAnchor: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " The alignment of text relative to label’s drawing position ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " Accepted values",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "start",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "middle",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "end",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textForeColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " ForeColor for the annotation label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textFontSize",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontSize: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " FontSize for the annotation label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textFontWeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontWeight: String | Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Font-weight for the annotation label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textFontFamily",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontFamily: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Font-family for the annotation label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textAppendTo",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "appendTo: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " A query selector to which the text element will be appended.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textBorderColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderColor: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Border Color for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textBorderRadius",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderRadius: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Border Radius for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textBorderWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderWidth: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Border width for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textPaddingLeft",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "paddingLeft: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Left padding for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textPaddingRight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "paddingRight: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Right padding for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textPaddingTop",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "paddingTop: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Top padding for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "textPaddingBottom",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "paddingBottom: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Bottom padding for the label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "images",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "images",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "images: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imagePath",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "path: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " An absolute path to the image",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imageX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "x: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Left position for the image relative to the element specified in ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "appendTo",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " property",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imageY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "y: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Top position for the image relative to the element specified in ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "appendTo",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " property",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imageWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " The width of the image",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imageHeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "height: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " The height of the image",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imageAppendTo",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "appendTo: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " A query selector to which the image element will be appended.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: fill 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "fill",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "fill",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "colors",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "colors",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "colors: Array of Color | Array of function",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Colors to fill the svg paths. Each index in the array corresponds to the series-index. Example",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "
fill: {
  colors: ['#1A73E8', '#B32824']
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "content": "Alternatively, if you are rendering a bar/pie/donut/radialBar chart, you can pass a function which returns color based on value.",
            "type": "text",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "br",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "
fill: {
  colors: [function({ value, seriesIndex, w }) {
    if(value &lt; 55) {
        return '#7E36AF'
    } else if (value &gt;= 55 &amp;&amp; value &lt; 80) {
        return '#164666'
    } else {
        return '#D9534F'
    }
  }]
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "opacity",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "opacity",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "opacity: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Opacity of the fill attribute.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "filltype",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "filltype",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "type: String || Array of String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to fill the paths with solid colors or gradient. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "solid",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "gradient",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "pattern",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "image",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "content": " In a multi-series chart, you can pass an array to allow a combination of fill types like this",
            "type": "text",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "
fill: {
  type: 'gradient'
}
/* OR */
fill: {
  type: ['solid', 'gradient']
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "gradient",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "class",
            "value": "gradient",
          },
        ],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "gradient",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "href",
                    "value": "https://codepen.io/apexcharts/pen/GQmoXP",
                  },
                  Object {
                    "key": "target",
                    "value": "_blank",
                  },
                  Object {
                    "key": "rel",
                    "value": "noopener noreferrer",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "Example",
                    "type": "text",
                  },
                ],
                "tagName": "a",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "shade",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "shade: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available options for gradient shade",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "light",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dark",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "type",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "type: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available options for gradient type",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "horizontal",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "vertical",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "diagonal1",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "diagonal2",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "shadeIntensity",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "shadeIntensity: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Intensity of the gradient shade. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "Accepts from ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "0",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                      Object {
                        "content": " to ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "1",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                    ],
                    "tagName": "i",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "gradientToColors",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "gradientToColors: Array",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Optional colors that ends the gradient to. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " The main ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "href",
                        "value": "/docs/options/colors/",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "colors",
                        "type": "text",
                      },
                    ],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "content": " array becomes the ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "gradientFromColors",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " and this array becomes the ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "end",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " colors of the gradient. Each index in the array corresponds to the series-index.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "inverseColors",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "inverseColors: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Inverse the start and end colors of the gradient.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "opacityFrom",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "opacityFrom: Number || Array of Numbers",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Start color's opacity. If you want different opacity for different series, you can pass an array of numbers. For eg., ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "opacityFrom: [0.2, 0.8]",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "opacityTo",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "opacityTo: Number || Array of Numbers",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " End color's opacity",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "stops",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "stops: Array",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Stops defines the ramp of colors to use on a gradient",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "colorStops",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "colorStops: Array",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Override everything and define your own stops with unlimited color stops.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "class",
                        "value": "lang-javascript",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "
[
  [
    {
      offset: 0,
      color: '#eee',
      opacity: 1
    },
    {
      offset: 0.6,
      color: 'green',
      opacity: 50
    },
    {
      offset: 100,
      color: 'red',
      opacity: 1
    }
  ],
  [
    {
      offset: 0,
      color: '#999',
      opacity: 1
    },
    {
      offset: 50,
      color: 'blue',
      opacity: 0.75
    },
    {
      offset: 100,
      color: '#ddd',
      opacity: 1
    }
  ]
]
",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": "
",
                    "type": "text",
                  },
                ],
                "tagName": "pre",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Each index in the above code corresponds to a series. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "href",
                        "value": "https://codepen.io/apexcharts/pen/RvqdPb",
                      },
                      Object {
                        "key": "target",
                        "value": "_blank",
                      },
                      Object {
                        "key": "rel",
                        "value": "noopener noreferrer",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "Codepen Example",
                        "type": "text",
                      },
                    ],
                    "tagName": "a",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "image",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "image",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "src",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "src: Array",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " src accepts an array of image paths which will correspond to each series.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imagesWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Width of each image for all the series",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "imagesHeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "height: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Height of each image for all the series",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "pattern",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "Pattern",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "style",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available pattern styles",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "verticalLines",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "horizontalLines",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "slantedLines",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "squares",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "circles",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "width",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Pattern width which will be repeated at this interval",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "height",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "height: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Pattern height which will be repeated at this interval",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "strokeWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "strokeWidth: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Pattern lines width indicates the thickness of the stroke of pattern.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: markers 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "markers",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "markers",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "src",
                    "value": "https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts.png",
                  },
                  Object {
                    "key": "alt",
                    "value": "Markers - apexcharts",
                  },
                  Object {
                    "key": "width",
                    "value": "641",
                  },
                  Object {
                    "key": "height",
                    "value": "324",
                  },
                  Object {
                    "key": "class",
                    "value": "alignnone size-full wp-image-2170",
                  },
                  Object {
                    "key": "srcset",
                    "value": "https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts.png 641w, https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts-300x152.png 300w",
                  },
                  Object {
                    "key": "sizes",
                    "value": "(max-width: 641px) 100vw, 641px",
                  },
                ],
                "children": Array [],
                "tagName": "img",
                "type": "element",
              },
            ],
            "tagName": "noscript",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "src",
                "value": "data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20641%20324%22%3E%3C/svg%3E",
              },
              Object {
                "key": "data-src",
                "value": "https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts.png",
              },
              Object {
                "key": "alt",
                "value": "Markers - apexcharts",
              },
              Object {
                "key": "width",
                "value": "641",
              },
              Object {
                "key": "height",
                "value": "324",
              },
              Object {
                "key": "class",
                "value": "lazyload alignnone size-full wp-image-2170",
              },
              Object {
                "key": "data-srcset",
                "value": "https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts.png 641w, https://apexcharts.com/wp-content/uploads/2018/11/markers-apexcharts-300x152.png 300w",
              },
              Object {
                "key": "data-sizes",
                "value": "(max-width: 641px) 100vw, 641px",
              },
            ],
            "children": Array [],
            "tagName": "img",
            "type": "element",
          },
        ],
        "tagName": "p",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerSize",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "size: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Size of the marker point.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "class",
                "value": "tip",
              },
            ],
            "children": Array [
              Object {
                "content": " In a multi-series chart, you can provide an array of numbers to display different size of markers on different series ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
markers: {
  size: [4, 7]
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "src",
                    "value": "https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts.png",
                  },
                  Object {
                    "key": "alt",
                    "value": "",
                  },
                  Object {
                    "key": "width",
                    "value": "605",
                  },
                  Object {
                    "key": "height",
                    "value": "275",
                  },
                  Object {
                    "key": "class",
                    "value": "alignnone size-full wp-image-2166",
                  },
                  Object {
                    "key": "srcset",
                    "value": "https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts.png 605w, https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts-300x136.png 300w",
                  },
                  Object {
                    "key": "sizes",
                    "value": "(max-width: 605px) 100vw, 605px",
                  },
                ],
                "children": Array [],
                "tagName": "img",
                "type": "element",
              },
            ],
            "tagName": "noscript",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "src",
                "value": "data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20605%20275%22%3E%3C/svg%3E",
              },
              Object {
                "key": "data-src",
                "value": "https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts.png",
              },
              Object {
                "key": "alt",
                "value": "",
              },
              Object {
                "key": "width",
                "value": "605",
              },
              Object {
                "key": "height",
                "value": "275",
              },
              Object {
                "key": "class",
                "value": "lazyload alignnone size-full wp-image-2166",
              },
              Object {
                "key": "data-srcset",
                "value": "https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts.png 605w, https://apexcharts.com/wp-content/uploads/2018/11/different-marker-size-array-apexcharts-300x136.png 300w",
              },
              Object {
                "key": "data-sizes",
                "value": "(max-width: 605px) 100vw, 605px",
              },
            ],
            "children": Array [],
            "tagName": "img",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "colors",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "colors: Color || Array of Colors",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the fill color(s) of the marker point.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "strokeColors",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "strokeColors: String || Array of Strings",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Stroke Color of the marker. Accepts a single color or an array of colors in a multi-series chart.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "strokeWidth",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "strokeWidth: Number || Array of Numbers",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Stroke Size of the marker.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "strokeOpacity",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "strokeOpacity: Number || Array of Numbers",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Opacity of the border around marker.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "strokeDashArray",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "strokeDashArray: Number || Array of Numbers",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Dashes in the border around marker. Higher number creates more space between dashes in the border.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "fillOpacity",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "fillOpacity: Number || Array of Numbers",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Opacity of the marker fill color.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerDiscrete",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "discrete: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Allows you to target individual data-points and style particular marker differently ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
markers: {
  discrete: [{
    seriesIndex: 0,
    dataPointIndex: 7,
    fillColor: '#e3e3e3',
    strokeColor: '#fff',
    size: 5,
    shape: \\"circle\\" // \\"circle\\" | \\"square\\" | \\"rect\\"
  }, {
    seriesIndex: 2,
    dataPointIndex: 11,
    fillColor: '#f7f4f3',
    strokeColor: '#eee',
    size: 4,
    shape: \\"circle\\" // \\"circle\\" | \\"square\\" | \\"rect\\"
  }]
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerRadius",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "radius: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Radius of the marker (applies to square shape)",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerShape",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "shape: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Shape of the marker. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available Options for shape",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "circle",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "square",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerOffsetX",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetX: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the left offset of the marker",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerOffsetY",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetY: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the top offset of the marker",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerOnClick",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "onClick: Function",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " When a marker is clicked, markers.onClick is called.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
markers: {
  onClick: function(e) {
    // do something on marker click
  }
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "class",
                "value": "tip",
              },
            ],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "data-feather",
                    "value": "alert-octagon",
                  },
                ],
                "children": Array [],
                "tagName": "i",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "Note:",
                    "type": "text",
                  },
                ],
                "tagName": "strong",
                "type": "element",
              },
              Object {
                "content": " This event will not work for a shared and non-intersecting tooltip. You will have to modify your tooltip to the following code to catch the events.",
                "type": "text",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
tooltip: {
  shared: false,
  intersect: true
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "markerOnDblClick",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "onDblClick: Function",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " When a marker is double clicked, markers.onDblClick is called.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
markers: {
  onDblClick: function(e) {
    // do something on marker double click
  }
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "class",
                "value": "tip",
              },
            ],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "data-feather",
                    "value": "alert-octagon",
                  },
                ],
                "children": Array [],
                "tagName": "i",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "Note:",
                    "type": "text",
                  },
                ],
                "tagName": "strong",
                "type": "element",
              },
              Object {
                "content": " This event will not work for a shared and non-intersecting tooltip. You will have to modify your tooltip to the following code to catch the events.",
                "type": "text",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
tooltip: {
  shared: false,
  intersect: true
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "showNullDataPoints",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "showNullDataPoints: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to show markers for null values in a line/area chart. If disabled, any null values present in line/area charts will not be visible.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "hover",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "hover",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "hoverSize",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "size: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fixed size of the marker when it is active",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "hoverSizeOffset",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "sizeOffset: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Unlike the fixed size, this option takes the original markers.size and increases/decreases the value based on it. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " So, if ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "markers.size: 6",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": ", ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "markers.hover.sizeOffset: 3",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " will make the marker’s size 9 when hovered.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: noData 1`] = `
Array [
  Object {
    "content": " ",
    "type": "text",
  },
  Object {
    "attributes": Array [
      Object {
        "key": "id",
        "value": "noData",
      },
      Object {
        "key": "class",
        "value": "anchor",
      },
    ],
    "children": Array [],
    "tagName": "a",
    "type": "element",
  },
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "noData",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "noData",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "text",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "text: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The text to display when no-data is available. Defaults to undefined which displays nothing.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "align",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "align: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Available Options ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "left",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "center",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "right",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "verticalAlign",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "verticalAlign: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Available Options ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "top",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "middle",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "bottom",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "offsetX",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetX: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " text offset from left",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "offsetY",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetY: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " text offset from left",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "style",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "style",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "color",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " ForeColor of the text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "fontSize",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontSize: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " FontSize of the text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "fontFamily",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontFamily: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " FontFamily of the text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: stroke 1`] = `
Array [
  Object {
    "content": " ",
    "type": "text",
  },
  Object {
    "attributes": Array [
      Object {
        "key": "id",
        "value": "stroke",
      },
      Object {
        "key": "class",
        "value": "anchor",
      },
    ],
    "children": Array [],
    "tagName": "a",
    "type": "element",
  },
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "stroke",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "stroke",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "show",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "show: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " To show or hide path-stroke / line",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "curve",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "curve: String || Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " In line / area charts, whether to draw smooth lines or straight lines ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available Options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "smooth: connects the points in a curve fashion. Also known as spline",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "straight: connect the points in straight lines.",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "stepline: points are connected by horizontal and vertical line segments, looking like steps of a staircase.",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "content": " You can also pass an array in ",
            "type": "text",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "stroke.curve",
                "type": "text",
              },
            ],
            "tagName": "code",
            "type": "element",
          },
          Object {
            "content": ", where each index corresponds to the series-index in multi-series charts.",
            "type": "text",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "lang-javascript",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "
stroke: {
  curve: 'smooth',
  // OR provide an array
  curve: ['smooth', 'straight', 'stepline']
}
",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": "
",
                "type": "text",
              },
            ],
            "tagName": "pre",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "lineCap",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "lineCap: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " For setting the starting and ending points of stroke ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available Options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "butt: ends the stroke with a 90-degree angle",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "square: similar to butt except that it extends the stroke beyond the length of the path",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "round: ends the path-stroke with a radius that smooths out the start and end points",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "colors",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "colors: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Colors to fill the border for paths.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "width",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "width: Number || Array (array valid only for line/area charts)",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the width of border for svg path",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "dashArray",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "dashArray: Number || Array of Numbers",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Creates dashes in borders of svg path. Higher number creates more space between dashes in the border. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: title 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "chart-title",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "title",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "text",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "text: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Text to display as a title of chart",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "align",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "align: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Alignment of title relative to chart area. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Possible Options ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "left",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "center",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "right",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "margin",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "margin: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Vertical spacing around the title text",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "offsetX",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetX: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the left offset for title text",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "offsetY",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "offsetY: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Sets the top offset for title text",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "floating",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "floating: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The floating option will take out the title text from the chart area and make it float on top of the chart.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "style",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "style",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "fontSize",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontSize: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Font Size of the title text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "fontWeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontWeight: String | Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Font Weight of the title text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "fontFamily",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fontFamily: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Font Family of the title text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "color",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Fore color of the title text",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: xaxis 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "xaxis",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "xaxis",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "type",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "type: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Available Options ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "category",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "datetime",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "numeric",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "categories",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "categories: Array",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Categories are labels which are displayed on the x-axis.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tickAmount",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tickAmount: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Number of Tick Intervals to show.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "Note:",
                    "type": "text",
                  },
                ],
                "tagName": "strong",
                "type": "element",
              },
              Object {
                "content": " tickAmount doesn’t have any effect when xaxis.type = ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "datetime",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "class",
                "value": "tip",
              },
            ],
            "children": Array [
              Object {
                "content": " If you have a numeric xaxis ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "xaxis.type = 'numeric'",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": ", you can specify ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "tickAmount: 'dataPoints'",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": " which would make the number of ticks equal to the number of dataPoints in the chart.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tickPlacement",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tickPlacement: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to draw the ticks in between the data-points or on the data-points. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "tickPlacement: 'between'",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                    ],
                    "tagName": "pre",
                    "type": "element",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "width",
                        "value": "602",
                      },
                      Object {
                        "key": "height",
                        "value": "309",
                      },
                      Object {
                        "key": "src",
                        "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between.png",
                      },
                      Object {
                        "key": "alt",
                        "value": "xaxis-tickplacement",
                      },
                      Object {
                        "key": "class",
                        "value": "alignnone size-medium wp-image-3072",
                      },
                      Object {
                        "key": "srcset",
                        "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between.png 602w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-300x154.png 300w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-320x164.png 320w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-360x185.png 360w",
                      },
                      Object {
                        "key": "sizes",
                        "value": "(max-width: 602px) 100vw, 602px",
                      },
                    ],
                    "children": Array [],
                    "tagName": "img",
                    "type": "element",
                  },
                ],
                "tagName": "noscript",
                "type": "element",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "width",
                    "value": "602",
                  },
                  Object {
                    "key": "height",
                    "value": "309",
                  },
                  Object {
                    "key": "src",
                    "value": "data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20602%20309%22%3E%3C/svg%3E",
                  },
                  Object {
                    "key": "data-src",
                    "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between.png",
                  },
                  Object {
                    "key": "alt",
                    "value": "xaxis-tickplacement",
                  },
                  Object {
                    "key": "class",
                    "value": "lazyload alignnone size-medium wp-image-3072",
                  },
                  Object {
                    "key": "data-srcset",
                    "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between.png 602w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-300x154.png 300w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-320x164.png 320w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-between-360x185.png 360w",
                  },
                  Object {
                    "key": "data-sizes",
                    "value": "(max-width: 602px) 100vw, 602px",
                  },
                ],
                "children": Array [],
                "tagName": "img",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "tickPlacement: 'on'",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                    ],
                    "tagName": "pre",
                    "type": "element",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "width",
                        "value": "607",
                      },
                      Object {
                        "key": "height",
                        "value": "315",
                      },
                      Object {
                        "key": "src",
                        "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on.png",
                      },
                      Object {
                        "key": "alt",
                        "value": "xaxis-tickplacement-on",
                      },
                      Object {
                        "key": "class",
                        "value": "alignnone size-medium wp-image-3073",
                      },
                      Object {
                        "key": "srcset",
                        "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on.png 607w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-300x156.png 300w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-320x166.png 320w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-360x187.png 360w",
                      },
                      Object {
                        "key": "sizes",
                        "value": "(max-width: 607px) 100vw, 607px",
                      },
                    ],
                    "children": Array [],
                    "tagName": "img",
                    "type": "element",
                  },
                ],
                "tagName": "noscript",
                "type": "element",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "width",
                    "value": "607",
                  },
                  Object {
                    "key": "height",
                    "value": "315",
                  },
                  Object {
                    "key": "src",
                    "value": "data:image/svg+xml,%3Csvg%20xmlns=%22http://www.w3.org/2000/svg%22%20viewBox=%220%200%20607%20315%22%3E%3C/svg%3E",
                  },
                  Object {
                    "key": "data-src",
                    "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on.png",
                  },
                  Object {
                    "key": "alt",
                    "value": "xaxis-tickplacement-on",
                  },
                  Object {
                    "key": "class",
                    "value": "lazyload alignnone size-medium wp-image-3073",
                  },
                  Object {
                    "key": "data-srcset",
                    "value": "https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on.png 607w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-300x156.png 300w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-320x166.png 320w, https://apexcharts.com/wp-content/uploads/2019/02/xaxis-tickplacement-on-360x187.png 360w",
                  },
                  Object {
                    "key": "data-sizes",
                    "value": "(max-width: 607px) 100vw, 607px",
                  },
                ],
                "children": Array [],
                "tagName": "img",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "Note:",
                    "type": "text",
                  },
                ],
                "tagName": "strong",
                "type": "element",
              },
              Object {
                "content": " tickPlacement only works for ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "xaxis.type: category",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": " charts and not for datetime charts.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "min",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "min: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The lowest number to be set for the x-axis. The graph drawing beyond this number will be clipped off",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "max",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "max: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The highest number to be set for the x-axis. The graph drawing beyond this number will be clipped off",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "range",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "range: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " range takes the max value of x-axis, subtracts the provided range value and gets the min value based on that. So, technically
 it helps to keep the same range when min and max values gets updated dynamically",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "floating",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "floating: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Setting this options takes the y-axis out of the plotting area. Much behaves like ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "position: absolute",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": " property of CSS",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "decimalsInFloat",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "decimalsInFloat: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The number of fractions to display when there are floating values on the x-axis numbers. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "Note",
                        "type": "text",
                      },
                    ],
                    "tagName": "strong",
                    "type": "element",
                  },
                  Object {
                    "content": ": Works only in numeric type.",
                    "type": "text",
                  },
                ],
                "tagName": "span",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "overwriteCategories",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "overwriteCategories: Array of String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Allows you to overwrite all the labels of the x-axis with these labels. Accepts an array of string values.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "position",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "position: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Setting this option allows you to change the x-axis position ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "bottom",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "top",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "labels",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "labels:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show labels on x-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "rotate",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "rotate: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Rotate angle for the x-axis labels",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "rotateAlways",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "rotateAlways: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Whether to rotate the labels always or to rotate only when the texts don’t fit the available width",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "hideOverlappingLabels",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "hideOverlappingLabels: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " When labels are too close and start to overlap on one another, this option prevents overlapping of the labels.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "showDuplicates",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "showDuplicates: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " By default, duplicate labels are not printed to prevent congested values in a datetime series. If you intentionally want to display the same values in x-axis labels, turn on this option",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "trim",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "trim: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Append ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "style",
                        "value": "font-size: 18px;",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "...",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " to the text when it can’t fit the available space and rotate is turned off",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "minheight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "minHeight: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Minimum height for the labels",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "maxheight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "maxHeight: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Maximum height for the labels when they are rotated.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "style",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "colors: Array || Single Color String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " ForeColor for the x-axis label. Accepts an array for ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "href",
                            "value": "/javascript-chart-demos/column-charts/distributed/",
                          },
                        ],
                        "children": Array [
                          Object {
                            "content": "distributed",
                            "type": "text",
                          },
                        ],
                        "tagName": "a",
                        "type": "element",
                      },
                      Object {
                        "content": " charts or accepts a single color string.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontSize: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontSize for the x-axis label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontFamily",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontFamily: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontFamily for the x-axis label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontWeight",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontWeight: String | Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Font-weight for the x-axis label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsCssClass",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "cssClass: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " A custom Css Class to give to the label elements",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "format",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "format: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Formats the datetime value based on the format specifier. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " See the list of available ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "href",
                        "value": "/docs/datetime",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "format specifiers",
                        "type": "text",
                      },
                    ],
                    "tagName": "a",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "formatter",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "formatter: function",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Overrides everything and applies a custom function for the xaxis value. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " The function accepts 3 arguments. The first one is the default formatted ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "value",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " and the second one as the raw ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "timestamp",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " which you can pass to any datetime handling function to suit your needs. The 3rd argument is present in date-time xaxis which includes a dateFormatter as described in the code below.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Example",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "    ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [
                          Object {
                            "key": "class",
                            "value": "lang-javascript",
                          },
                        ],
                        "children": Array [
                          Object {
                            "content": "
      xaxis: {
        labels: {
          /**
          * Allows users to apply a custom formatter function to x-axis labels.
          *
          * @param { String } value - The default value generated
          * @param { Number } timestamp - In a datetime series, this is the raw timestamp
          * @param { object } contains dateFormatter for datetime x-axis
          */
          formatter: function(value, timestamp, opts) {
            return opts.dateFormatter(new Date(timestamp)).format(\\"dd MMM\\")
          }
        }
      }
    ",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                      Object {
                        "content": "
  ",
                        "type": "text",
                      },
                    ],
                    "tagName": "pre",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "datetimeUTC",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "datetimeUTC: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " When turned on, local DateTime is converted into UTC. Turn it off if you supply date with timezone info and want to preserve it.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "datetimeFormatter",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "datetimeFormatter",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " For the default timescale that is generated automatically based on the datetime difference, the below specifiers are used by default.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "year",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "year: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Format specifier for the year.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "month",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "month: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Format specifier for the month.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "day",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "day: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Format specifier for the day of month.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "hour",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "hour: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Format specifier for the hour of day.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "axisBorder",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "axisBorder:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Draw a horizontal border on the x-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the horizontal axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderHeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "height: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the border height of the xaxis line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Number || String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the width of the xaxis line",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset of the axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset of the axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "axisTicks",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "axisTicks:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Draw ticks on the x-axis to specify intervals",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksBorderType",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderType: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available Options",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "solid",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dotted",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksHeight",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "height: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Height of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "title",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "title",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "text",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "text: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Give the x-axis a title which will be displayed below the axis labels by default.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titleOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for xaxis title.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titleOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for the xaxis title.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titlestyle",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "color: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " ForeColor of the x-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontSize: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontSize for the x-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontFamily",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontFamily: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontFamily for the x-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontWeight",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontWeight: String | Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Font-weight for the x-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleCssClass",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "cssClass: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " A custom Css Class to give to the x-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "crosshairs",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "crosshairs",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "showCrosshairs",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show crosshairs on x-axis when user moves the mouse over chart area",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Number || String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Possible Options ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "Any number",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "tickWidth ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "Takes the tick intervals on x-axis and creates a crosshair of that width",
                            "type": "text",
                          },
                        ],
                        "tagName": "small",
                        "type": "element",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "barWidth ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "Takes the barWidth and creates a crosshair of that width – only applicable to vertical bar charts",
                            "type": "text",
                          },
                        ],
                        "tagName": "small",
                        "type": "element",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsPosition",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "position: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Possible Options ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "back",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "front",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsOpacity",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "opacity: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Opacity of the crosshairs",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsStroke",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "stroke",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "color: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Color of crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "width: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Width of crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeDashArray",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dashArray: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Creates dashes in borders of crosshairs. A higher number creates more space between dashes in the border.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsFill",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "fill",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsFillType",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "type: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Possible Options ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [],
                        "tagName": "br",
                        "type": "element",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "solid",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "gradient",
                            "type": "text",
                          },
                        ],
                        "tagName": "li",
                        "type": "element",
                      },
                    ],
                    "tagName": "ul",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsFillColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "color: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Fill color of crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsFillGradient",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "gradient",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "crosshairsFillGradientColorFrom",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "colorFrom: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Crosshairs Gradient Color from",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "crosshairsFillGradientColorTo",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "colorTo: Color",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Crosshairs Gradient Color to",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "crosshairsFillGradientColorStops",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "stops: Array",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Stops defines the ramp of colors to use on a gradient",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "crosshairsFillGradientColorOpacityFrom",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "opacityFrom: Number",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Crosshairs fill opacity from",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "id",
                        "value": "crosshairsFillGradientColorOpacityFrom",
                      },
                      Object {
                        "key": "class",
                        "value": "anchor",
                      },
                    ],
                    "children": Array [],
                    "tagName": "a",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "opacityTo: Number",
                            "type": "text",
                          },
                        ],
                        "tagName": "h3",
                        "type": "element",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": " Crosshairs fill opacity to",
                            "type": "text",
                          },
                        ],
                        "tagName": "p",
                        "type": "element",
                      },
                    ],
                    "tagName": "div",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "dropShadow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "dropShadow",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "dropShadowEnabled",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "enabled: Boolean",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Enable a dropshadow for crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "dropShadowTop",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "top: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Set top offset for shadow",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "dropShadowLeft",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "left: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Set left offset for shadow",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "dropShadowBlur",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "blur: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Set blur distance for shadow",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "dropShadowOpacity",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "opacity: Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Set the opacity of shadow.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tooltip",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tooltip",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipEnabled",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "enabled: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show tooltip on x-axis or not",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipFormatter",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "formatter: Function",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " A custom formatter function for the x-axis tooltip label. If undefined, the xaxis tooltip uses the default “X” value used in general tooltip. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                  Object {
                    "content": " Example ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "  ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "class",
                        "value": "lang-javascript",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "
  xaxis: {
    tooltip: {
      formatter: function(val, opts) {
        return val + \\"...\\"
      }
    }
  }
  ",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": "
  ",
                    "type": "text",
                  },
                ],
                "tagName": "pre",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for x-axis tooltip",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipStyle",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style:",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "tooltipFontSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontSize: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontSize for the x-axis tooltip text",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "tooltipFontFamily",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontFamily: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontFamily for the x-axis tooltip text",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can parseHtml: yaxis 1`] = `
Array [
  Object {
    "attributes": Array [
      Object {
        "key": "class",
        "value": "yaxis",
      },
    ],
    "children": Array [
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "content": "yaxis",
            "type": "text",
          },
        ],
        "tagName": "h3",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "show",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "show: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to display the y-axis or not.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "showAlways",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "showAlways: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Whether to hide y-axis when user toggles series through legend. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "autoplay",
                    "value": "",
                  },
                  Object {
                    "key": "muted",
                    "value": "",
                  },
                  Object {
                    "key": "loop",
                    "value": "",
                  },
                  Object {
                    "key": "poster",
                    "value": "https://apexcharts.com/wp-content/uploads/2019/02/yaxis-showAlways.png",
                  },
                ],
                "children": Array [
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "src",
                        "value": "https://apexcharts.com/wp-content/uploads/2019/02/yaxis-showAlways.mp4",
                      },
                      Object {
                        "key": "type",
                        "value": "video/mp4",
                      },
                    ],
                    "children": Array [],
                    "tagName": "source",
                    "type": "element",
                  },
                ],
                "tagName": "video",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "showForNullSeries",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "showForNullSeries: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " When turned off, it will hide the y-axis completely for a series which has no data or a series with all null values.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "seriesName",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "seriesName: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " In a multiple y-axis chart, you can target the scale of a y-axis to a particular series by referencing through the ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "seriesName",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": ". The ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "href",
                    "value": "/docs/options/series",
                  },
                ],
                "children": Array [
                  Object {
                    "content": "series",
                    "type": "text",
                  },
                ],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "content": " item which have the same ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "name",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": " property will be used to calculate the scale of the y-axis.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "opposite",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "opposite: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " When enabled, will draw the yaxis on the right side of the chart",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "reversed",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "reversed: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Flip the chart upside down making it inversed and draw the y-axis from bigger to smaller numbers.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "logarithmic",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "logarithmic: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " A non-linear scale when there is a large range of values.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "logBase",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "logBase: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Controls the logarithmic base. Default is 10",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tickAmount",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tickAmount: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Number of Tick Intervals to show",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "min",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "min: Number || Function",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Lowest number to be set for the y-axis. The graph drawing beyond this number will be clipped off ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " You can also pass a function here which should return a number. The function accepts an argument which by default is the smallest value in the y-axis. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "function(min) { return min }",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "max",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "max: Number || Function",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Highest number to be set for the y-axis. The graph drawing beyond this number will be clipped off. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " You can also pass a function here which should return a number. The function accepts an argument which by default is the smallest value in the y-axis. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "function(max) { return max }",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "forceNiceScale",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "forceNiceScale: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " If set to ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "true",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": ", the y-axis scales are forced to generate nice looking rounded numbers even when min/max are provided. Turn this off if you manually set min/max and want it to be unchanged.",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "floating",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "floating: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Setting this options takes the y-axis out of the plotting area. Much behaves like ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "position: absolute",
                    "type": "text",
                  },
                ],
                "tagName": "code",
                "type": "element",
              },
              Object {
                "content": " property of CSS",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "decimalsInFloat",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "decimalsInFloat: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " The number of fractions to display when there are floating values in y-axis. ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "Note",
                        "type": "text",
                      },
                    ],
                    "tagName": "strong",
                    "type": "element",
                  },
                  Object {
                    "content": ": If you have defined a custom formatter function in ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "yaxis.labels.formatter",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": ", this won’t have any effect.",
                    "type": "text",
                  },
                ],
                "tagName": "span",
                "type": "element",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "labels",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "labels:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show labels on y-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "align",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "align: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available Options",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "left",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "center",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "right",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "minWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "minWidth: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Minimum width for the y-axis labels",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "maxWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "maxWidth: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Maximum width for the y-axis labels",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "style",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "colors: Single Colors || Array of Colors",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " ForeColor for the y-axis label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontSize: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontSize for the y-axis label",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontFamily",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontFamily: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Font-family for the y-axis label.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsFontWeight",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontWeight: String | Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Font-weight for the y-axis label.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "labelsCssClass",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "cssClass: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " A custom Css Class to give to the label elements",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for label",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "labelsRotate",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "rotate: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Rotate y-axis text label to a specific angle from it’s center",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "formatter",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "formatter: function",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Applies a custom function for the yaxis value. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "  ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "class",
                        "value": "lang-javascript",
                      },
                    ],
                    "children": Array [
                      Object {
                        "content": "
  yaxis: {
    labels: {
      /**
      * Allows users to apply a custom formatter function to yaxis labels.
      *
      * @param { String } value - The generated value of the y-axis tick
      * @param { index } index of the tick / currently executing iteration in yaxis labels array
      */
      formatter: function(val, index) {
        return val.toFixed(2);
      }
    }
  }
  ",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": "
  ",
                    "type": "text",
                  },
                ],
                "tagName": "pre",
                "type": "element",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "class",
                    "value": "tip",
                  },
                ],
                "children": Array [
                  Object {
                    "content": " ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [
                      Object {
                        "key": "data-feather",
                        "value": "alert-octagon",
                      },
                    ],
                    "children": Array [],
                    "tagName": "i",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "Note:",
                        "type": "text",
                      },
                    ],
                    "tagName": "strong",
                    "type": "element",
                  },
                  Object {
                    "content": " In horizantal bar charts, the second parameters also contains additional data like ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dataPointIndex",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": " &amp; ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "seriesIndex",
                        "type": "text",
                      },
                    ],
                    "tagName": "code",
                    "type": "element",
                  },
                  Object {
                    "content": ".",
                    "type": "text",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "axisBorder",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "axisBorder:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Draw a vertical border on the y-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the horizontal axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset of the axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisBorderOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset of the axis border",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "axisTicks",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "axisTicks:",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksShow",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Draw ticks on the y-axis to specify intervals",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksBorderType",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "borderType: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Available Options",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "solid",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dotted",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksColor",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "color: Color",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Color of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksWidth",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "width: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Width of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "axisTicksOffsetY",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset of the ticks",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tickAmount",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tickAmount: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Number of Tick Intervals to show",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "min",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "min: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Lowest number to be set for the y-axis. The graph drawing beyond this number will be clipped off",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "max",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "max: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Highest number to be set for the y-axis. The graph drawing beyond this number will be clipped off",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "range",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "range: Number",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " range takes the max value of y-axis, subtracts the provided range value and gets the min value based on that. So, technically
 it helps to keep the same range when min and max values gets updated dynamically",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "floating",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "floating: Boolean",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Floating takes y-axis is taken out of normal flow and places y-axis on svg element directly, similar to an absolutely positioned
 element. Set the offsetX and offsetY then to adjust the position manually",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "position",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "position: String",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": " Setting this option allows you to change the y-axis position ",
                "type": "text",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "br",
                "type": "element",
              },
              Object {
                "content": " Available options",
                "type": "text",
              },
            ],
            "tagName": "p",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "bottom",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "top",
                    "type": "text",
                  },
                ],
                "tagName": "li",
                "type": "element",
              },
            ],
            "tagName": "ul",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [],
            "tagName": "p",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "title",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "title",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "text",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "text: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Give the y-axis a title which will be displayed below the axis labels by default.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titleRotate",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "rotate: Number",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Rotate the yaxis title either 90 or -90.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titleOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the left offset for yaxis title.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "text",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetY: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for the yaxis title.",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "titlestyle",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "style",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "color: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " ForeColor of the y-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontSize",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontSize: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontSize for the y-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontFamily",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontFamily: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " FontFamily for the y-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleFontWeight",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "fontWeight: String | Number",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Font-weight for the y-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "titlestyleCssClass",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "cssClass: String",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " A custom Css Class to give to the y-axis title",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "crosshairs",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "crosshairs",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "showCrosshairs",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "show: Boolean",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show crosshairs on y-axis when user moves the mouse over chart area. ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "Note",
                            "type": "text",
                          },
                        ],
                        "tagName": "strong",
                        "type": "element",
                      },
                      Object {
                        "content": ": Make sure to have ",
                        "type": "text",
                      },
                      Object {
                        "attributes": Array [],
                        "children": Array [
                          Object {
                            "content": "yaxis.tooltip.enabled: 'true'",
                            "type": "text",
                          },
                        ],
                        "tagName": "code",
                        "type": "element",
                      },
                      Object {
                        "content": " to make the crosshair visible.",
                        "type": "text",
                      },
                    ],
                    "tagName": "span",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsPosition",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "position: String",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Possible Options ",
                    "type": "text",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [],
                    "tagName": "br",
                    "type": "element",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "back",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "front",
                        "type": "text",
                      },
                    ],
                    "tagName": "li",
                    "type": "element",
                  },
                ],
                "tagName": "ul",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "crosshairsStroke",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "stroke",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeColor",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "color: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Color of crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeWidth",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "width: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Border Width of crosshairs",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
              Object {
                "content": " ",
                "type": "text",
              },
              Object {
                "attributes": Array [
                  Object {
                    "key": "id",
                    "value": "crosshairsStrokeDashArray",
                  },
                  Object {
                    "key": "class",
                    "value": "anchor",
                  },
                ],
                "children": Array [],
                "tagName": "a",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": "dashArray: Color",
                        "type": "text",
                      },
                    ],
                    "tagName": "h3",
                    "type": "element",
                  },
                  Object {
                    "attributes": Array [],
                    "children": Array [
                      Object {
                        "content": " Creates dashes in borders of crosshairs. Higher number creates more space between dashes in the border.",
                        "type": "text",
                      },
                    ],
                    "tagName": "p",
                    "type": "element",
                  },
                ],
                "tagName": "div",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
      Object {
        "content": " ",
        "type": "text",
      },
      Object {
        "attributes": Array [
          Object {
            "key": "id",
            "value": "tooltip",
          },
          Object {
            "key": "class",
            "value": "anchor",
          },
        ],
        "children": Array [],
        "tagName": "a",
        "type": "element",
      },
      Object {
        "attributes": Array [],
        "children": Array [
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "content": "tooltip",
                "type": "text",
              },
            ],
            "tagName": "h3",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipEnabled",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "enabled",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Show tooltip on y-axis",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
          Object {
            "content": " ",
            "type": "text",
          },
          Object {
            "attributes": Array [
              Object {
                "key": "id",
                "value": "tooltipOffsetX",
              },
              Object {
                "key": "class",
                "value": "anchor",
              },
            ],
            "children": Array [],
            "tagName": "a",
            "type": "element",
          },
          Object {
            "attributes": Array [],
            "children": Array [
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": "offsetX",
                    "type": "text",
                  },
                ],
                "tagName": "h3",
                "type": "element",
              },
              Object {
                "attributes": Array [],
                "children": Array [
                  Object {
                    "content": " Sets the top offset for y-axis tooltip",
                    "type": "text",
                  },
                ],
                "tagName": "p",
                "type": "element",
              },
            ],
            "tagName": "div",
            "type": "element",
          },
        ],
        "tagName": "div",
        "type": "element",
      },
    ],
    "tagName": "div",
    "type": "element",
  },
]
`;

exports[`io can stringify: annotations 1`] = `
"{
  position: new optionModel.SelectOptionField({ front: { value: 'front', labelId: 'annotations.position.option.front' },back: { value: 'back', labelId: 'annotations.position.option.back' } }),
  yaxis: new optionModel.ListOptionField({  y: new optionModel.NumberOptionField(),  strokeDashArray: new optionModel.NumberOptionField(),  borderColor: null,  fillColor: null,  opacity: new optionModel.NumberOptionField(),  offsetX: new optionModel.NumberOptionField(),  offsetY: new optionModel.NumberOptionField(),  width: new optionModel.TextOptionField(),  yAxisIndex: new optionModel.NumberOptionField(),  label: {    borderColor: null,    borderWidth: new optionModel.NumberOptionField(),    borderRadius: new optionModel.NumberOptionField(),    text: new optionModel.TextOptionField(),    textAnchor: new optionModel.SelectOptionField({ start: { value: 'start', labelId: 'annotations.yaxis.label.textAnchor.option.start' },middle: { value: 'middle', labelId: 'annotations.yaxis.label.textAnchor.option.middle' },end: { value: 'end', labelId: 'annotations.yaxis.label.textAnchor.option.end' } }),    position: new optionModel.SelectOptionField({ left: { value: 'left', labelId: 'annotations.yaxis.label.position.option.left' },right: { value: 'right', labelId: 'annotations.yaxis.label.position.option.right' } }),    offsetX: new optionModel.NumberOptionField(),    offsetY: new optionModel.NumberOptionField(),    mouseEnter: null,    mouseLeave: null,    style: {      background: null,      color: null,      fontSize: new optionModel.TextOptionField(),      fontWeight: new optionModel.TextOptionField(),      fontFamily: new optionModel.TextOptionField(),      cssClass: new optionModel.TextOptionField(),      padding: {        left: new optionModel.NumberOptionField(),        right: new optionModel.NumberOptionField(),        top: new optionModel.NumberOptionField(),        bottom: new optionModel.NumberOptionField()      }    }  }}),
  xaxis: new optionModel.ListOptionField({  x: new optionModel.NumberOptionField(),  strokeDashArray: new optionModel.NumberOptionField(),  borderColor: null,  fillColor: null,  opacity: new optionModel.NumberOptionField(),  offsetX: new optionModel.NumberOptionField(),  offsetY: new optionModel.NumberOptionField(),  label: {    borderColor: null,    borderWidth: new optionModel.NumberOptionField(),    borderRadius: new optionModel.NumberOptionField(),    text: new optionModel.TextOptionField(),    textAnchor: new optionModel.SelectOptionField({ start: { value: 'start', labelId: 'annotations.xaxis.label.textAnchor.option.start' },middle: { value: 'middle', labelId: 'annotations.xaxis.label.textAnchor.option.middle' },end: { value: 'end', labelId: 'annotations.xaxis.label.textAnchor.option.end' } }),    position: new optionModel.SelectOptionField({ top: { value: 'top', labelId: 'annotations.xaxis.label.position.option.top' },bottom: { value: 'bottom', labelId: 'annotations.xaxis.label.position.option.bottom' } }),    orientation: new optionModel.SelectOptionField({ vertical: { value: 'vertical', labelId: 'annotations.xaxis.label.orientation.option.vertical' },horizontal: { value: 'horizontal', labelId: 'annotations.xaxis.label.orientation.option.horizontal' } }),    offsetX: new optionModel.NumberOptionField(),    offsetY: new optionModel.NumberOptionField(),    mouseEnter: null,    mouseLeave: null,    style: {      color: null,      fontSize: new optionModel.TextOptionField(),      fontWeight: new optionModel.TextOptionField(),      fontFamily: new optionModel.TextOptionField(),      cssClass: new optionModel.TextOptionField()    }  }}),
  points: new optionModel.ListOptionField({  x: new optionModel.TextOptionField(),  y: new optionModel.NumberOptionField(),  yAxisIndex: new optionModel.NumberOptionField(),  seriesIndex: new optionModel.NumberOptionField(),  mouseEnter: null,  mouseLeave: null,  marker: {    size: new optionModel.NumberOptionField(),    fillColor: new optionModel.TextOptionField(),    strokeColor: new optionModel.TextOptionField(),    strokeWidth: new optionModel.NumberOptionField(),    shape: new optionModel.SelectOptionField({ circle: { value: 'circle', labelId: 'annotations.points.marker.shape.option.circle' },square: { value: 'square', labelId: 'annotations.points.marker.shape.option.square' } }),    radius: new optionModel.NumberOptionField(),    offsetX: new optionModel.NumberOptionField(),    offsetY: new optionModel.NumberOptionField(),    cssClass: new optionModel.TextOptionField()  },  label: {    borderColor: null,    borderWidth: new optionModel.NumberOptionField(),    borderRadius: new optionModel.NumberOptionField(),    text: new optionModel.TextOptionField(),    textAnchor: new optionModel.SelectOptionField({ start: { value: 'start', labelId: 'annotations.points.label.textAnchor.option.start' },middle: { value: 'middle', labelId: 'annotations.points.label.textAnchor.option.middle' },end: { value: 'end', labelId: 'annotations.points.label.textAnchor.option.end' } }),    offsetX: new optionModel.NumberOptionField(),    offsetY: new optionModel.NumberOptionField(),    mouseEnter: null,    mouseLeave: null,    style: {      background: null,      color: null,      fontSize: new optionModel.TextOptionField(),      fontWeight: new optionModel.TextOptionField(),      fontFamily: new optionModel.TextOptionField(),      cssClass: new optionModel.TextOptionField(),      padding: {        left: new optionModel.NumberOptionField(),        right: new optionModel.NumberOptionField(),        top: new optionModel.NumberOptionField(),        bottom: new optionModel.NumberOptionField()      }    }  },  image: {    path: new optionModel.TextOptionField(),    width: new optionModel.NumberOptionField(),    height: new optionModel.NumberOptionField(),    offsetX: new optionModel.NumberOptionField(),    offsetY: new optionModel.NumberOptionField()  }}),
  texts: new optionModel.ListOptionField({  x: new optionModel.NumberOptionField(),  y: new optionModel.NumberOptionField(),  text: new optionModel.TextOptionField(),  textAnchor: new optionModel.SelectOptionField({ start: { value: 'start', labelId: 'annotations.texts.textAnchor.option.start' },middle: { value: 'middle', labelId: 'annotations.texts.textAnchor.option.middle' },end: { value: 'end', labelId: 'annotations.texts.textAnchor.option.end' } }),  color: null,  fontSize: new optionModel.TextOptionField(),  fontWeight: new optionModel.TextOptionField(),  fontFamily: new optionModel.TextOptionField(),  appendTo: new optionModel.TextOptionField(),  borderColor: null,  borderRadius: new optionModel.NumberOptionField(),  borderWidth: new optionModel.NumberOptionField(),  paddingLeft: new optionModel.NumberOptionField(),  paddingRight: new optionModel.NumberOptionField(),  paddingTop: new optionModel.NumberOptionField(),  paddingBottom: new optionModel.NumberOptionField()}),
  images: new optionModel.ListOptionField({  path: new optionModel.TextOptionField(),  x: new optionModel.NumberOptionField(),  y: new optionModel.NumberOptionField(),  width: new optionModel.NumberOptionField(),  height: new optionModel.NumberOptionField(),  appendTo: new optionModel.TextOptionField()})
}"
`;

exports[`io can stringify: fill 1`] = `
"{
  colors: null,
  opacity: new optionModel.NumberOptionField(),
  type: new optionModel.SelectOptionField({ solid: { value: 'solid', labelId: 'fill.type.option.solid' },gradient: { value: 'gradient', labelId: 'fill.type.option.gradient' },pattern: { value: 'pattern', labelId: 'fill.type.option.pattern' },image: { value: 'image', labelId: 'fill.type.option.image' } }),
  gradient: {
    shade: new optionModel.SelectOptionField({ light: { value: 'light', labelId: 'fill.gradient.shade.option.light' },dark: { value: 'dark', labelId: 'fill.gradient.shade.option.dark' } }),
    type: new optionModel.SelectOptionField({ horizontal: { value: 'horizontal', labelId: 'fill.gradient.type.option.horizontal' },vertical: { value: 'vertical', labelId: 'fill.gradient.type.option.vertical' },diagonal1: { value: 'diagonal1', labelId: 'fill.gradient.type.option.diagonal1' },diagonal2: { value: 'diagonal2', labelId: 'fill.gradient.type.option.diagonal2' } }),
    shadeIntensity: new optionModel.NumberOptionField(),
    gradientToColors: null,
    inverseColors: new optionModel.BoolOptionField(),
    opacityFrom: null,
    opacityTo: null,
    stops: null,
    colorStops: null
  },
  image: {
    src: null,
    width: new optionModel.NumberOptionField(),
    height: new optionModel.NumberOptionField()
  },
  pattern: {
    style: new optionModel.SelectOptionField({ verticalLines: { value: 'verticalLines', labelId: 'fill.pattern.style.option.verticalLines' },horizontalLines: { value: 'horizontalLines', labelId: 'fill.pattern.style.option.horizontalLines' },slantedLines: { value: 'slantedLines', labelId: 'fill.pattern.style.option.slantedLines' },squares: { value: 'squares', labelId: 'fill.pattern.style.option.squares' },circles: { value: 'circles', labelId: 'fill.pattern.style.option.circles' } }),
    width: new optionModel.NumberOptionField(),
    height: new optionModel.NumberOptionField(),
    strokeWidth: new optionModel.NumberOptionField()
  }
}"
`;

exports[`io can stringify: markers 1`] = `
"{
  size: new optionModel.NumberOptionField(),
  colors: null,
  strokeColors: null,
  strokeWidth: null,
  strokeOpacity: null,
  strokeDashArray: null,
  fillOpacity: null,
  discrete: null,
  radius: new optionModel.NumberOptionField(),
  shape: new optionModel.SelectOptionField({ circle: { value: 'circle', labelId: 'markers.shape.option.circle' },square: { value: 'square', labelId: 'markers.shape.option.square' } }),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  onClick: null,
  onDblClick: null,
  showNullDataPoints: new optionModel.BoolOptionField(),
  hover: {
    size: new optionModel.NumberOptionField(),
    sizeOffset: new optionModel.NumberOptionField()
  }
}"
`;

exports[`io can stringify: noData 1`] = `
"{
  text: new optionModel.TextOptionField(),
  align: new optionModel.SelectOptionField({ left: { value: 'left', labelId: 'noData.align.option.left' },center: { value: 'center', labelId: 'noData.align.option.center' },right: { value: 'right', labelId: 'noData.align.option.right' } }),
  verticalAlign: new optionModel.SelectOptionField({ top: { value: 'top', labelId: 'noData.verticalAlign.option.top' },middle: { value: 'middle', labelId: 'noData.verticalAlign.option.middle' },bottom: { value: 'bottom', labelId: 'noData.verticalAlign.option.bottom' } }),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  style: {
    color: null,
    fontSize: new optionModel.TextOptionField(),
    fontFamily: new optionModel.TextOptionField()
  }
}"
`;

exports[`io can stringify: stroke 1`] = `
"{
  show: new optionModel.BoolOptionField(),
  curve: new optionModel.SelectOptionField({ smooth: { value: 'smooth', labelId: 'stroke.curve.option.smooth' },straight: { value: 'straight', labelId: 'stroke.curve.option.straight' },stepline: { value: 'stepline', labelId: 'stroke.curve.option.stepline' } }),
  lineCap: new optionModel.SelectOptionField({ butt: { value: 'butt', labelId: 'stroke.lineCap.option.butt' },square: { value: 'square', labelId: 'stroke.lineCap.option.square' },round: { value: 'round', labelId: 'stroke.lineCap.option.round' } }),
  colors: null,
  width: null,
  dashArray: null
}"
`;

exports[`io can stringify: title 1`] = `
"{
  text: new optionModel.TextOptionField(),
  align: new optionModel.SelectOptionField({ left: { value: 'left', labelId: 'title.align.option.left' },center: { value: 'center', labelId: 'title.align.option.center' },right: { value: 'right', labelId: 'title.align.option.right' } }),
  margin: new optionModel.NumberOptionField(),
  offsetX: new optionModel.NumberOptionField(),
  offsetY: new optionModel.NumberOptionField(),
  floating: new optionModel.BoolOptionField(),
  style: {
    fontSize: new optionModel.TextOptionField(),
    fontWeight: new optionModel.TextOptionField(),
    fontFamily: new optionModel.TextOptionField(),
    color: null
  }
}"
`;

exports[`io can stringify: xaxis 1`] = `
"{
  type: new optionModel.SelectOptionField({ category: { value: 'category', labelId: 'xaxis.type.option.category' },datetime: { value: 'datetime', labelId: 'xaxis.type.option.datetime' },numeric: { value: 'numeric', labelId: 'xaxis.type.option.numeric' } }),
  categories: null,
  tickAmount: new optionModel.NumberOptionField(),
  tickPlacement: new optionModel.SelectOptionField({ between: { value: 'between', labelId: 'xaxis.tickPlacement.option.between' },on: { value: 'on', labelId: 'xaxis.tickPlacement.option.on' } }),
  min: new optionModel.NumberOptionField(),
  max: new optionModel.NumberOptionField(),
  range: new optionModel.NumberOptionField(),
  floating: new optionModel.BoolOptionField(),
  decimalsInFloat: new optionModel.NumberOptionField(),
  overwriteCategories: null,
  position: new optionModel.SelectOptionField({ bottom: { value: 'bottom', labelId: 'xaxis.position.option.bottom' },top: { value: 'top', labelId: 'xaxis.position.option.top' } }),
  labels: {
    show: new optionModel.BoolOptionField(),
    rotate: new optionModel.NumberOptionField(),
    rotateAlways: new optionModel.BoolOptionField(),
    hideOverlappingLabels: new optionModel.BoolOptionField(),
    showDuplicates: new optionModel.BoolOptionField(),
    trim: new optionModel.BoolOptionField(),
    minHeight: new optionModel.NumberOptionField(),
    maxHeight: new optionModel.NumberOptionField(),
    style: {
      colors: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField()
    },
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    format: new optionModel.TextOptionField(),
    datetimeUTC: new optionModel.BoolOptionField(),
    datetimeFormatter: {
      year: new optionModel.TextOptionField(),
      month: new optionModel.TextOptionField(),
      day: new optionModel.TextOptionField(),
      hour: new optionModel.TextOptionField()
    }
  },
  axisBorder: {
    show: new optionModel.BoolOptionField(),
    color: null,
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    strokeWidth: new optionModel.NumberOptionField()
  },
  axisTicks: {
    show: new optionModel.BoolOptionField(),
    borderType: new optionModel.SelectOptionField({ solid: { value: 'solid', labelId: 'xaxis.axisTicks.borderType.option.solid' },dotted: { value: 'dotted', labelId: 'xaxis.axisTicks.borderType.option.dotted' } }),
    color: null,
    height: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField()
  },
  title: {
    text: new optionModel.TextOptionField(),
    offsetX: new optionModel.TextOptionField(),
    offsetY: new optionModel.TextOptionField(),
    style: {
      color: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField()
    }
  },
  crosshairs: {
    show: new optionModel.BoolOptionField(),
    width: new optionModel.NumberOptionField(),
    position: new optionModel.SelectOptionField({ back: { value: 'back', labelId: 'xaxis.crosshairs.position.option.back' },front: { value: 'front', labelId: 'xaxis.crosshairs.position.option.front' } }),
    opacity: new optionModel.NumberOptionField(),
    stroke: {
      color: null,
      width: new optionModel.NumberOptionField(),
      dashArray: new optionModel.NumberOptionField()
    },
    fill: {
      type: new optionModel.SelectOptionField({ solid: { value: 'solid', labelId: 'xaxis.crosshairs.fill.type.option.solid' },gradient: { value: 'gradient', labelId: 'xaxis.crosshairs.fill.type.option.gradient' } }),
      color: new optionModel.TextOptionField(),
      gradient: {
        colorFrom: null,
        colorTo: null,
        stops: null,
        opacityFrom: new optionModel.NumberOptionField(),
        opacityTo: new optionModel.NumberOptionField()
      }
    },
    dropShadow: {
      enabled: new optionModel.BoolOptionField(),
      top: new optionModel.NumberOptionField(),
      left: new optionModel.NumberOptionField(),
      blur: new optionModel.NumberOptionField(),
      opacity: new optionModel.NumberOptionField()
    }
  },
  tooltip: {
    enabled: new optionModel.BoolOptionField(),
    formatter: null,
    offsetY: new optionModel.NumberOptionField(),
    style: {
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField()
    }
  }
}"
`;

exports[`io can stringify: yaxis 1`] = `
"{
  show: new optionModel.BoolOptionField(),
  showAlways: new optionModel.BoolOptionField(),
  showForNullSeries: new optionModel.BoolOptionField(),
  seriesName: new optionModel.TextOptionField(),
  opposite: new optionModel.BoolOptionField(),
  reversed: new optionModel.BoolOptionField(),
  logarithmic: new optionModel.BoolOptionField(),
  logBase: new optionModel.NumberOptionField(),
  tickAmount: new optionModel.NumberOptionField(),
  min: new optionModel.NumberOptionField(),
  max: new optionModel.NumberOptionField(),
  forceNiceScale: new optionModel.BoolOptionField(),
  floating: new optionModel.BoolOptionField(),
  decimalsInFloat: new optionModel.NumberOptionField(),
  labels: {
    show: new optionModel.BoolOptionField(),
    align: new optionModel.SelectOptionField({ left: { value: 'left', labelId: 'yaxis.labels.align.option.left' },center: { value: 'center', labelId: 'yaxis.labels.align.option.center' },right: { value: 'right', labelId: 'yaxis.labels.align.option.right' } }),
    minWidth: new optionModel.NumberOptionField(),
    maxWidth: new optionModel.NumberOptionField(),
    style: {
      colors: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField()
    },
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField(),
    rotate: new optionModel.NumberOptionField(),
    formatter: null
  },
  axisBorder: {
    show: new optionModel.BoolOptionField(),
    color: null,
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField()
  },
  axisTicks: {
    show: new optionModel.BoolOptionField(),
    color: null,
    width: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField(),
    offsetY: new optionModel.NumberOptionField()
  },
  title: {
    text: new optionModel.TextOptionField(),
    rotate: new optionModel.NumberOptionField(),
    offsetX: new optionModel.TextOptionField(),
    offsetY: new optionModel.TextOptionField(),
    style: {
      color: null,
      fontSize: new optionModel.TextOptionField(),
      fontFamily: new optionModel.TextOptionField(),
      fontWeight: new optionModel.TextOptionField(),
      cssClass: new optionModel.TextOptionField()
    }
  },
  crosshairs: {
    show: new optionModel.BoolOptionField(),
    position: new optionModel.SelectOptionField({ back: { value: 'back', labelId: 'yaxis.crosshairs.position.option.back' },front: { value: 'front', labelId: 'yaxis.crosshairs.position.option.front' } }),
    stroke: {
      color: null,
      width: null,
      dashArray: null
    }
  },
  tooltip: {
    enabled: new optionModel.BoolOptionField(),
    offsetX: new optionModel.NumberOptionField()
  }
}"
`;
